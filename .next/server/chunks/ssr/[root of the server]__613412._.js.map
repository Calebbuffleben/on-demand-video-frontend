{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useClerk, useUser } from '@clerk/nextjs';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: any;\n  loading: boolean;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const { signOut } = useClerk();\n  const { user, isLoaded: isUserLoaded } = useUser();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (isUserLoaded) {\n      setLoading(false);\n    }\n  }, [isUserLoaded]);\n\n  const logout = async () => {\n    await signOut();\n    router.push('/sign-in');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        loading,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport const useAuthService = () => {\n  const { session, user } = useClerk();\n\n  const getToken = async (): Promise<string | null> => {\n    try {\n      if (!session) return null;\n      return await session.getToken();\n    } catch (error) {\n      console.error('Error getting token:', error);\n      return null;\n    }\n  };\n\n  const isAuthenticated = (): boolean => {\n    return !!user;\n  };\n\n  const getUserDetails = () => {\n    if (!user) return null;\n    \n    return {\n      id: user.id,\n      fullName: `${user.firstName} ${user.lastName}`,\n      email: user.primaryEmailAddress?.emailAddress,\n      imageUrl: user.imageUrl\n    };\n  };\n\n  return {\n    getToken,\n    isAuthenticated,\n    getUserDetails\n  };\n};\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,UAAU,YAAY,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,WAAW;QACb;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,SAAS;QACb,MAAM;QACN,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,qKAAC,YAAY,QAAQ;QACnB,OAAO;YACL,iBAAiB,CAAC,CAAC;YACnB;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AACO,MAAM,iBAAiB;IAC5B,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,WAAW;QACf,IAAI;YACF,IAAI,CAAC,SAAS,OAAO;YACrB,OAAO,MAAM,QAAQ,QAAQ;QAC/B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO;QACT;IACF;IAEA,MAAM,kBAAkB;QACtB,OAAO,CAAC,CAAC;IACX;IAEA,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM,OAAO;QAElB,OAAO;YACL,IAAI,KAAK,EAAE;YACX,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;YAC9C,OAAO,KAAK,mBAAmB,EAAE;YACjC,UAAU,KAAK,QAAQ;QACzB;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/hooks/useClerkToken.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useClerk, useUser, useOrganization } from '@clerk/nextjs';\n\n/**\n * This hook ensures the Clerk token is stored in localStorage\n * so the API service can use it for authenticated requests\n */\nexport function useClerkToken() {\n  const { session } = useClerk();\n  const { user, isLoaded: userLoaded } = useUser();\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const [lastOrgId, setLastOrgId] = useState<string | null>(null);\n  \n  // This effect handles token storage when organization changes\n  useEffect(() => {\n    // Wait until both user and organization data are loaded\n    if (!userLoaded || !orgLoaded) return;\n    \n    // Skip if organization hasn't changed\n    if (organization?.id === lastOrgId) return;\n    \n    // Update last org id\n    setLastOrgId(organization?.id || null);\n    \n    const storeToken = async () => {\n      if (!session) {\n        console.warn('No active session found');\n        localStorage.removeItem('token');\n        return;\n      }\n      \n      try {\n        console.log('Getting token from Clerk session...');\n        console.log('Current organization:', organization?.id, organization?.name);\n        \n        // Get organization-aware token - ensure our JWT template includes org claims\n        const tokenOptions = organization?.id \n          ? { \n              template: 'token_videos_on_demand_2',  // Use a template with organization claims\n              // You can also provide session data if needed\n              session: {\n                resources: [\"organization\"],\n                organizationId: organization.id,\n              }\n            } \n          : {};\n        \n        const token = await session.getToken(tokenOptions);\n        \n        if (token) {\n          // Store token with organization info\n          localStorage.setItem('token', token);\n          \n          // Store current organization ID separately for reference\n          if (organization?.id) {\n            localStorage.setItem('currentOrganizationId', organization.id);\n          } else {\n            localStorage.removeItem('currentOrganizationId');\n          }\n          \n          console.log('Token stored successfully with organization context');\n          \n          // Log user membership info for debugging\n          if (user) {\n            console.log('User organizations:', user.organizationMemberships?.length || 0);\n            user.organizationMemberships?.forEach(membership => {\n              const isActive = membership.organization.id === organization?.id;\n              console.log(`- Org: ${membership.organization.name} (${membership.organization.id}), Role: ${membership.role}${isActive ? ' [ACTIVE]' : ''}`);\n            });\n          }\n        } else {\n          console.warn('Empty token received from Clerk');\n        }\n      } catch (error) {\n        console.error('Failed to get or store Clerk token:', error);\n      }\n    };\n    \n    // Store token initially\n    storeToken();\n  }, [session, user, userLoaded, organization, orgLoaded, lastOrgId]);\n  \n  // This effect sets up token refresh on an interval\n  useEffect(() => {\n    // Setup polling interval to refresh token\n    const intervalId = setInterval(() => {\n      // Only refresh if we have a session and user is loaded\n      if (session && userLoaded) {\n        // This will trigger the above effect if organization has changed\n        setLastOrgId(organization?.id || null);\n      }\n    }, 1000 * 60 * 5); // Check every 5 minutes\n    \n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [session, userLoaded, organization]);\n}\n\nexport default useClerkToken; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AASO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,UAAU,UAAU,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,EAAE,YAAY,EAAE,UAAU,SAAS,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,kBAAe,AAAD;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,8DAA8D;IAC9D,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wDAAwD;QACxD,IAAI,CAAC,cAAc,CAAC,WAAW;QAE/B,sCAAsC;QACtC,IAAI,cAAc,OAAO,WAAW;QAEpC,qBAAqB;QACrB,aAAa,cAAc,MAAM;QAEjC,MAAM,aAAa;YACjB,IAAI,CAAC,SAAS;gBACZ,QAAQ,IAAI,CAAC;gBACb,aAAa,UAAU,CAAC;gBACxB;YACF;YAEA,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,QAAQ,GAAG,CAAC,yBAAyB,cAAc,IAAI,cAAc;gBAErE,6EAA6E;gBAC7E,MAAM,eAAe,cAAc,KAC/B;oBACE,UAAU;oBACV,8CAA8C;oBAC9C,SAAS;wBACP,WAAW;4BAAC;yBAAe;wBAC3B,gBAAgB,aAAa,EAAE;oBACjC;gBACF,IACA,CAAC;gBAEL,MAAM,QAAQ,MAAM,QAAQ,QAAQ,CAAC;gBAErC,IAAI,OAAO;oBACT,qCAAqC;oBACrC,aAAa,OAAO,CAAC,SAAS;oBAE9B,yDAAyD;oBACzD,IAAI,cAAc,IAAI;wBACpB,aAAa,OAAO,CAAC,yBAAyB,aAAa,EAAE;oBAC/D,OAAO;wBACL,aAAa,UAAU,CAAC;oBAC1B;oBAEA,QAAQ,GAAG,CAAC;oBAEZ,yCAAyC;oBACzC,IAAI,MAAM;wBACR,QAAQ,GAAG,CAAC,uBAAuB,KAAK,uBAAuB,EAAE,UAAU;wBAC3E,KAAK,uBAAuB,EAAE,QAAQ,CAAA;4BACpC,MAAM,WAAW,WAAW,YAAY,CAAC,EAAE,KAAK,cAAc;4BAC9D,QAAQ,GAAG,CAAC,CAAC,OAAO,EAAE,WAAW,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,IAAI,GAAG,WAAW,cAAc,IAAI;wBAC9I;oBACF;gBACF,OAAO;oBACL,QAAQ,IAAI,CAAC;gBACf;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uCAAuC;YACvD;QACF;QAEA,wBAAwB;QACxB;IACF,GAAG;QAAC;QAAS;QAAM;QAAY;QAAc;QAAW;KAAU;IAElE,mDAAmD;IACnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,0CAA0C;QAC1C,MAAM,aAAa,YAAY;YAC7B,uDAAuD;YACvD,IAAI,WAAW,YAAY;gBACzB,iEAAiE;gBACjE,aAAa,cAAc,MAAM;YACnC;QACF,GAAG,OAAO,KAAK,IAAI,wBAAwB;QAE3C,OAAO;YACL,cAAc;QAChB;IACF,GAAG;QAAC;QAAS;QAAY;KAAa;AACxC;uCAEe"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/TokenProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport useClerkToken from '../hooks/useClerkToken';\n\ninterface TokenProviderProps {\n  children: ReactNode;\n}\n\nexport function TokenProvider({ children }: TokenProviderProps) {\n  // This hook handles storing the Clerk token in localStorage\n  useClerkToken();\n  \n  // Just render children - the hook does the work\n  return <>{children}</>;\n}\n\nexport default TokenProvider; "],"names":[],"mappings":";;;;;AAGA;AAHA;;;AASO,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,4DAA4D;IAC5D,CAAA,GAAA,sHAAA,CAAA,UAAa,AAAD;IAEZ,gDAAgD;IAChD,qBAAO;kBAAG;;AACZ;uCAEe"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport { ClerkProvider } from \"@clerk/nextjs\";\nimport type { AppProps } from \"next/app\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport TokenProvider from \"../components/TokenProvider\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <ClerkProvider {...pageProps}>\n      <TokenProvider>\n        <AuthProvider>\n          <Component {...pageProps} />\n        </AuthProvider>\n      </TokenProvider>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAHA;;;;;;AAKe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,kKAAA,CAAA,gBAAa;QAAE,GAAG,SAAS;kBAC1B,cAAA,qKAAC,4HAAA,CAAA,UAAa;sBACZ,cAAA,qKAAC,wHAAA,CAAA,eAAY;0BACX,cAAA,qKAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;AAKlC"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api-connection/service.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: process.env.BACKEND_URL || 'http://localhost:4000', // Updated to match backend port\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    withCredentials: true\n});\n\n// Add request interceptor to include Clerk token from localStorage\napi.interceptors.request.use(\n    async (config) => {\n        if (typeof window === 'undefined') {\n            // We're on the server, so don't attempt to use localStorage\n            console.log('API request on server side - skipping auth token');\n            return config;\n        }\n        \n        // Get token from local storage\n        const token = localStorage.getItem('token');\n        const clerkOrgId = localStorage.getItem('currentOrganizationId');\n        const dbOrgId = localStorage.getItem('dbOrganizationId');\n        \n        // Log request details for debugging\n        console.log(`API ${config.method?.toUpperCase()} request to: ${config.url}`);\n        \n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n            \n            // Add organization context headers if available\n            if (clerkOrgId) {\n                // Always use Clerk ID for auth context\n                config.headers['X-Organization-Id'] = clerkOrgId;\n                console.log('Including Clerk organization ID:', clerkOrgId);\n            }\n            \n            // For endpoints that need database ID format\n            if (dbOrgId) {\n                config.headers['X-DB-Organization-Id'] = dbOrgId;\n                console.log('Including database organization ID:', dbOrgId);\n            }\n            \n            // For subscriptions endpoints, prioritize using database ID in URL\n            if (config.url && config.url.includes('/api/subscriptions/')) {\n                // If URL ends with 'current' or ID is already embedded, don't modify\n                if (!config.url.endsWith('/current') && \n                    !config.url.match(/\\/api\\/subscriptions\\/[a-zA-Z0-9_-]+$/)) {\n                    \n                    // Use database ID if available, otherwise use Clerk ID\n                    const orgIdForUrl = dbOrgId || clerkOrgId;\n                    if (orgIdForUrl) {\n                        config.url = `/api/subscriptions/${orgIdForUrl}`;\n                        console.log('Using organization ID in URL:', orgIdForUrl);\n                    }\n                }\n            }\n            \n            // Log token for debugging (truncated for security)\n            if (token.length > 20) {\n                console.log('Using token:', token.substring(0, 15) + '...');\n            }\n        } else {\n            console.warn('No authentication token found');\n        }\n        \n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n    (response) => {\n        console.log(`API response from ${response.config.url}: Status ${response.status}`);\n        \n        // Only attempt to use localStorage on the client\n        if (typeof window !== 'undefined') {\n            // Check for organization ID in response and save it\n            if (response.data?.organization?.id) {\n                // If the ID format suggests a database ID (UUID), save it\n                if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(response.data.organization.id)) {\n                    console.log('Saving database organization ID from response:', response.data.organization.id);\n                    localStorage.setItem('dbOrganizationId', response.data.organization.id);\n                }\n                \n                // If there's a clerkId field, save that too\n                if (response.data.organization.clerkId) {\n                    console.log('Saving Clerk organization ID from response:', response.data.organization.clerkId);\n                    localStorage.setItem('currentOrganizationId', response.data.organization.clerkId);\n                }\n            }\n        }\n        \n        return response;\n    },\n    (error) => {\n        console.error('API error:', error?.response?.data || error.message);\n        \n        // Only attempt to use localStorage and event dispatching on the client\n        if (typeof window !== 'undefined') {\n            // Get organization context for better error handling\n            const clerkOrgId = localStorage.getItem('currentOrganizationId');\n            const dbOrgId = localStorage.getItem('dbOrganizationId');\n            \n            // Handle specific error conditions\n            if (error.response?.status === 401) {\n                // Unauthorized - token is invalid or missing\n                console.error('Authentication error: Your session may have expired');\n                window.dispatchEvent(new CustomEvent('auth:unauthorized'));\n            } else if (error.response?.status === 400) {\n                // Organization access issue\n                console.error('Request error:', error.response.data.message);\n                \n                // Log detailed request info for debugging\n                console.error('Request URL:', error.config?.url);\n                console.error('Request headers:', JSON.stringify({\n                    'Authorization': error.config?.headers?.Authorization ? 'Bearer [REDACTED]' : 'None',\n                    'X-Organization-Id': error.config?.headers?.['X-Organization-Id'] || 'None',\n                    'X-DB-Organization-Id': error.config?.headers?.['X-DB-Organization-Id'] || 'None'\n                }));\n                console.log('Request details:', {\n                    method: error.config?.method,\n                    params: error.config?.params,\n                    data: error.config?.data\n                });\n                \n                console.log('Organization IDs:', {\n                    clerkId: clerkOrgId,\n                    dbId: dbOrgId\n                });\n                \n                // If error is organization related, check auth state\n                if (error.response?.data?.message?.includes('organization')) {\n                    window.dispatchEvent(new CustomEvent('org:accessdenied', {\n                        detail: { message: error.response.data.message }\n                    }));\n                }\n            }\n        }\n        \n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,MAAM,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,SAAS,QAAQ,GAAG,CAAC,WAAW,IAAI;IACpC,SAAS;QACL,gBAAgB;IACpB;IACA,iBAAiB;AACrB;AAEA,mEAAmE;AACnE,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CACxB,OAAO;IACH,wCAAmC;QAC/B,4DAA4D;QAC5D,QAAQ,GAAG,CAAC;QACZ,OAAO;IACX;;IAEA,+BAA+B;IAC/B,MAAM;IACN,MAAM;IACN,MAAM;AA6CV,GACA,CAAC;IACG,OAAO,QAAQ,MAAM,CAAC;AAC1B;AAGJ,8CAA8C;AAC9C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC;IACG,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,SAAS,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,MAAM,EAAE;IAEjF,iDAAiD;IACjD,uCAAmC;;IAenC;IAEA,OAAO;AACX,GACA,CAAC;IACG,QAAQ,KAAK,CAAC,cAAc,OAAO,UAAU,QAAQ,MAAM,OAAO;IAElE,uEAAuE;IACvE,uCAAmC;;IAuCnC;IAEA,OAAO,QAAQ,MAAM,CAAC;AAC1B;uCAGW"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api-connection/subscriptions.ts"],"sourcesContent":["import api from './service';\n\nexport const subscriptionService = {\n  // Get current user's subscription\n  getCurrentSubscription: async () => {\n    console.log('Fetching current subscription...');\n    \n    // First check if we have the required data\n    if (typeof window === 'undefined') {\n      throw new Error('Cannot call subscription service on server-side rendering');\n    }\n    \n    const token = localStorage.getItem('token');\n    const orgId = localStorage.getItem('currentOrganizationId'); // Clerk organization ID\n    const dbOrgId = localStorage.getItem('dbOrganizationId'); // Database organization ID\n    \n    if (!token) {\n      console.error('No token available for subscription request');\n      throw new Error('Authentication token is missing');\n    }\n    \n    if (!orgId) {\n      console.error('No organization ID available for subscription request');\n      throw new Error('Organization ID is missing');\n    }\n    \n    console.log('Making API call with organization:', orgId);\n    \n    // Call different endpoint that doesn't rely on header\n    try {\n      // Try the direct endpoint with organization ID parameter - prioritize database ID\n      if (dbOrgId) {\n        console.log('Using database organization ID for API call:', dbOrgId);\n        const response = await api.get(`/api/subscriptions/${dbOrgId}`);\n        console.log('Subscription API response:', response.status);\n        return response.data;\n      } else {\n        // Fall back to Clerk ID if database ID is not available\n        console.log('Using Clerk organization ID for API call:', orgId);\n        const response = await api.get(`/api/subscriptions/${orgId}`);\n        console.log('Subscription API response:', response.status);\n        return response.data;\n      }\n    } catch (error: any) {\n      console.error('Failed to get subscription by ID, falling back to current endpoint:', error);\n      \n      // Fall back to the current endpoint\n      try {\n        const response = await api.get('/api/subscriptions/current');\n        console.log('Fallback subscription API response:', response.status);\n        return response.data;\n      } catch (error: any) {\n        handleSubscriptionError(error);\n        throw error;\n      }\n    }\n  },\n\n  // Create a checkout session\n  createCheckoutSession: async (priceId: string) => {\n    try {\n      const response = await api.post('/api/subscriptions/create-checkout', { priceId });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create checkout session:', error);\n      throw error;\n    }\n  },\n\n  // Cancel subscription\n  cancelSubscription: async (subscriptionId: string) => {\n    try {\n      const response = await api.put(`/api/subscriptions/${subscriptionId}/cancel`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to cancel subscription:', error);\n      throw error;\n    }\n  },\n\n  // Get available subscription plans\n  getSubscriptionPlans: async () => {\n    try {\n      const response = await api.get('/api/subscriptions/plans');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get subscription plans:', error);\n      throw error;\n    }\n  }\n};\n\n// Helper function to handle subscription errors\nfunction handleSubscriptionError(error: any) {\n  console.error('Subscription error:', error?.response?.data || error.message);\n  \n  // Provide more specific error messages\n  if (error.response?.status === 401) {\n    throw new Error('Your session has expired. Please sign in again.');\n  } else if (error.response?.status === 403) {\n    throw new Error('You do not have permission to access this subscription.');\n  } else if (error.response?.status === 404) {\n    throw new Error('Subscription not found. You may need to subscribe first.');\n  } else if (error.response?.data?.message) {\n    throw new Error(error.response.data.message);\n  }\n}\n\nexport default subscriptionService;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Checkout/Checkout.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport subscriptionService from '../../api-connection/subscriptions';\n\ninterface CheckoutProps {\n  priceId: string;\n}\n\nconst Checkout: React.FC<CheckoutProps> = ({ priceId }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const router = useRouter();\n\n  const handleCheckout = async () => {\n    setIsLoading(true);\n    try {\n      // Use the subscription service\n      const { sessionUrl } = await subscriptionService.createCheckoutSession(priceId);\n      \n      // Redirect to the Stripe Checkout page using the URL provided by Stripe\n      if (sessionUrl) {\n        router.push(sessionUrl);\n      } else {\n        console.error('No session URL returned from the API');\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Error creating Stripe Checkout session:', error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleCheckout}\n      disabled={isLoading}\n      className=\"bg-[#55624c] hover:bg-[#45524c] text-white font-bold py-2 px-4 rounded\"\n    >\n      {isLoading ? 'Loading...' : 'Subscribe'}\n    </button>\n  );\n};\n\nexport default Checkout; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;AAJA;;;;;AAUA,MAAM,WAAoC,CAAC,EAAE,OAAO,EAAE;IACpD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,iBAAiB;QACrB,aAAa;QACb,IAAI;YACF,+BAA+B;YAC/B,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,kIAAA,CAAA,UAAmB,CAAC,qBAAqB,CAAC;YAEvE,wEAAwE;YACxE,IAAI,YAAY;gBACd,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,QAAQ,KAAK,CAAC;gBACd,aAAa;YACf;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,aAAa;QACf;IACF;IAEA,qBACE,qKAAC;QACC,SAAS;QACT,UAAU;QACV,WAAU;kBAET,YAAY,eAAe;;;;;;AAGlC;uCAEe"}},
    {"offset": {"line": 654, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Pricing/PricingPlanComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Checkout from '../Checkout/Checkout';\n\ninterface PricingPlanProps {\n  name: string;\n  price: string;\n  description: string;\n  features: string[];\n  priceId: string;\n}\n\nconst PricingPlanComponent: React.FC<PricingPlanProps> = ({ name, price, description, features, priceId }) => {\n  return (\n    <div className=\"relative p-12 bg-white border border-gray-200 rounded-3xl shadow-lg flex flex-col w-[450px]\">\n      <div className=\"flex-1\">\n        <h3 className=\"text-2xl font-bold text-gray-900\">{name}</h3>\n        <p className=\"mt-6 flex items-baseline text-gray-900\">\n          <span className=\"text-6xl font-extrabold tracking-tight\">{price}</span>\n          <span className=\"ml-2 text-2xl font-semibold\">/month</span>\n        </p>\n        <p className=\"mt-8 text-lg text-gray-500\">{description}</p>\n        <ul role=\"list\" className=\"mt-8 space-y-6\">\n          {features.map((feature, index) => (\n            <li key={index} className=\"flex items-center\">\n              <span className=\"text-gray-500\">\n                <svg className=\"flex-shrink-0 h-7 w-7\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#55624c\" aria-hidden=\"true\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </span>\n              <span className=\"ml-4 text-lg text-gray-500\">{feature}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"mt-10\">\n        <Checkout priceId={priceId} />\n      </div>\n    </div>\n  );\n};\n\nexport default PricingPlanComponent; "],"names":[],"mappings":";;;;AACA;;;;;;;AAUA,MAAM,uBAAmD,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE;IACvG,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,qKAAC;wBAAE,WAAU;;0CACX,qKAAC;gCAAK,WAAU;0CAA0C;;;;;;0CAC1D,qKAAC;gCAAK,WAAU;0CAA8B;;;;;;;;;;;;kCAEhD,qKAAC;wBAAE,WAAU;kCAA8B;;;;;;kCAC3C,qKAAC;wBAAG,MAAK;wBAAO,WAAU;kCACvB,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,qKAAC;gCAAe,WAAU;;kDACxB,qKAAC;wCAAK,WAAU;kDACd,cAAA,qKAAC;4CAAI,WAAU;4CAAwB,OAAM;4CAA6B,MAAK;4CAAO,SAAQ;4CAAY,QAAO;4CAAU,eAAY;sDACrI,cAAA,qKAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;kDAGzE,qKAAC;wCAAK,WAAU;kDAA8B;;;;;;;+BANvC;;;;;;;;;;;;;;;;0BAWf,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC,mIAAA,CAAA,UAAQ;oBAAC,SAAS;;;;;;;;;;;;;;;;;AAI3B;uCAEe"}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/pricing/index.tsx"],"sourcesContent":["import PricingPlanComponent from '../../components/Pricing/PricingPlanComponent';\n\nconst PricingPage = () => {\n  const basicPlan = {\n    name: 'Basic Plan',\n    price: '$9.99',\n    description: 'Perfect for individuals and small teams.',\n    features: ['10 products', '1 user'],\n    priceId: 'price_1R4jNLAIzkEWAbtilQVHzE2P',\n  };\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\n        <h1 className=\"text-4xl font-extrabold text-center text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\">\n          Pricing Plans\n        </h1>\n        <p className=\"mt-5 text-xl text-gray-500 text-center\">\n          Choose the plan that best fits your needs.\n        </p>\n        <div className=\"mt-12 flex justify-center\">\n          <PricingPlanComponent {...basicPlan} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PricingPage; "],"names":[],"mappings":";;;;AAAA;;;;;;;AAEA,MAAM,cAAc;IAClB,MAAM,YAAY;QAChB,MAAM;QACN,OAAO;QACP,aAAa;QACb,UAAU;YAAC;YAAe;SAAS;QACnC,SAAS;IACX;IAEA,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAG,WAAU;8BAA8F;;;;;;8BAG5G,qKAAC;oBAAE,WAAU;8BAAyC;;;;;;8BAGtD,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC,8IAAA,CAAA,UAAoB;wBAAE,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;;AAK7C;uCAEe"}},
    {"offset": {"line": 879, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}