{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useClerk, useUser } from '@clerk/nextjs';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: any;\n  loading: boolean;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const { signOut } = useClerk();\n  const { user, isLoaded: isUserLoaded } = useUser();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (isUserLoaded) {\n      setLoading(false);\n    }\n  }, [isUserLoaded]);\n\n  const logout = async () => {\n    await signOut();\n    router.push('/sign-in');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        loading,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport const useAuthService = () => {\n  const { session, user } = useClerk();\n\n  const getToken = async (): Promise<string | null> => {\n    try {\n      if (!session) return null;\n      return await session.getToken();\n    } catch (error) {\n      console.error('Error getting token:', error);\n      return null;\n    }\n  };\n\n  const isAuthenticated = (): boolean => {\n    return !!user;\n  };\n\n  const getUserDetails = () => {\n    if (!user) return null;\n    \n    return {\n      id: user.id,\n      fullName: `${user.firstName} ${user.lastName}`,\n      email: user.primaryEmailAddress?.emailAddress,\n      imageUrl: user.imageUrl\n    };\n  };\n\n  return {\n    getToken,\n    isAuthenticated,\n    getUserDetails\n  };\n};\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,UAAU,YAAY,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,WAAW;QACb;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,SAAS;QACb,MAAM;QACN,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,qKAAC,YAAY,QAAQ;QACnB,OAAO;YACL,iBAAiB,CAAC,CAAC;YACnB;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AACO,MAAM,iBAAiB;IAC5B,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,WAAW;QACf,IAAI;YACF,IAAI,CAAC,SAAS,OAAO;YACrB,OAAO,MAAM,QAAQ,QAAQ;QAC/B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO;QACT;IACF;IAEA,MAAM,kBAAkB;QACtB,OAAO,CAAC,CAAC;IACX;IAEA,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM,OAAO;QAElB,OAAO;YACL,IAAI,KAAK,EAAE;YACX,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;YAC9C,OAAO,KAAK,mBAAmB,EAAE;YACjC,UAAU,KAAK,QAAQ;QACzB;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/hooks/useClerkToken.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useClerk, useUser, useOrganization } from '@clerk/nextjs';\n\n/**\n * This hook ensures the Clerk token is stored in localStorage\n * so the API service can use it for authenticated requests\n */\nexport function useClerkToken() {\n  const { session } = useClerk();\n  const { user, isLoaded: userLoaded } = useUser();\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const [lastOrgId, setLastOrgId] = useState<string | null>(null);\n  \n  // This effect handles token storage when organization changes\n  useEffect(() => {\n    // Wait until both user and organization data are loaded\n    if (!userLoaded || !orgLoaded) return;\n    \n    // Skip if organization hasn't changed\n    if (organization?.id === lastOrgId) return;\n    \n    // Update last org id\n    setLastOrgId(organization?.id || null);\n    \n    const storeToken = async () => {\n      if (!session) {\n        console.warn('No active session found');\n        localStorage.removeItem('token');\n        return;\n      }\n      \n      try {\n        console.log('Getting token from Clerk session...');\n        console.log('Current organization:', organization?.id, organization?.name);\n        \n        // Get organization-aware token - ensure our JWT template includes org claims\n        const tokenOptions = organization?.id \n          ? { \n              template: 'token_videos_on_demand_2',  // Use a template with organization claims\n              // You can also provide session data if needed\n              session: {\n                resources: [\"organization\"],\n                organizationId: organization.id,\n              }\n            } \n          : {};\n        \n        const token = await session.getToken(tokenOptions);\n        \n        if (token) {\n          // Store token with organization info\n          localStorage.setItem('token', token);\n          \n          // Store current organization ID separately for reference\n          if (organization?.id) {\n            localStorage.setItem('currentOrganizationId', organization.id);\n          } else {\n            localStorage.removeItem('currentOrganizationId');\n          }\n          \n          console.log('Token stored successfully with organization context');\n          \n          // Log user membership info for debugging\n          if (user) {\n            console.log('User organizations:', user.organizationMemberships?.length || 0);\n            user.organizationMemberships?.forEach(membership => {\n              const isActive = membership.organization.id === organization?.id;\n              console.log(`- Org: ${membership.organization.name} (${membership.organization.id}), Role: ${membership.role}${isActive ? ' [ACTIVE]' : ''}`);\n            });\n          }\n        } else {\n          console.warn('Empty token received from Clerk');\n        }\n      } catch (error) {\n        console.error('Failed to get or store Clerk token:', error);\n      }\n    };\n    \n    // Store token initially\n    storeToken();\n  }, [session, user, userLoaded, organization, orgLoaded, lastOrgId]);\n  \n  // This effect sets up token refresh on an interval\n  useEffect(() => {\n    // Setup polling interval to refresh token\n    const intervalId = setInterval(() => {\n      // Only refresh if we have a session and user is loaded\n      if (session && userLoaded) {\n        // This will trigger the above effect if organization has changed\n        setLastOrgId(organization?.id || null);\n      }\n    }, 1000 * 60 * 5); // Check every 5 minutes\n    \n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [session, userLoaded, organization]);\n}\n\nexport default useClerkToken; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AASO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,UAAU,UAAU,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,EAAE,YAAY,EAAE,UAAU,SAAS,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,kBAAe,AAAD;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,8DAA8D;IAC9D,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wDAAwD;QACxD,IAAI,CAAC,cAAc,CAAC,WAAW;QAE/B,sCAAsC;QACtC,IAAI,cAAc,OAAO,WAAW;QAEpC,qBAAqB;QACrB,aAAa,cAAc,MAAM;QAEjC,MAAM,aAAa;YACjB,IAAI,CAAC,SAAS;gBACZ,QAAQ,IAAI,CAAC;gBACb,aAAa,UAAU,CAAC;gBACxB;YACF;YAEA,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,QAAQ,GAAG,CAAC,yBAAyB,cAAc,IAAI,cAAc;gBAErE,6EAA6E;gBAC7E,MAAM,eAAe,cAAc,KAC/B;oBACE,UAAU;oBACV,8CAA8C;oBAC9C,SAAS;wBACP,WAAW;4BAAC;yBAAe;wBAC3B,gBAAgB,aAAa,EAAE;oBACjC;gBACF,IACA,CAAC;gBAEL,MAAM,QAAQ,MAAM,QAAQ,QAAQ,CAAC;gBAErC,IAAI,OAAO;oBACT,qCAAqC;oBACrC,aAAa,OAAO,CAAC,SAAS;oBAE9B,yDAAyD;oBACzD,IAAI,cAAc,IAAI;wBACpB,aAAa,OAAO,CAAC,yBAAyB,aAAa,EAAE;oBAC/D,OAAO;wBACL,aAAa,UAAU,CAAC;oBAC1B;oBAEA,QAAQ,GAAG,CAAC;oBAEZ,yCAAyC;oBACzC,IAAI,MAAM;wBACR,QAAQ,GAAG,CAAC,uBAAuB,KAAK,uBAAuB,EAAE,UAAU;wBAC3E,KAAK,uBAAuB,EAAE,QAAQ,CAAA;4BACpC,MAAM,WAAW,WAAW,YAAY,CAAC,EAAE,KAAK,cAAc;4BAC9D,QAAQ,GAAG,CAAC,CAAC,OAAO,EAAE,WAAW,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,IAAI,GAAG,WAAW,cAAc,IAAI;wBAC9I;oBACF;gBACF,OAAO;oBACL,QAAQ,IAAI,CAAC;gBACf;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uCAAuC;YACvD;QACF;QAEA,wBAAwB;QACxB;IACF,GAAG;QAAC;QAAS;QAAM;QAAY;QAAc;QAAW;KAAU;IAElE,mDAAmD;IACnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,0CAA0C;QAC1C,MAAM,aAAa,YAAY;YAC7B,uDAAuD;YACvD,IAAI,WAAW,YAAY;gBACzB,iEAAiE;gBACjE,aAAa,cAAc,MAAM;YACnC;QACF,GAAG,OAAO,KAAK,IAAI,wBAAwB;QAE3C,OAAO;YACL,cAAc;QAChB;IACF,GAAG;QAAC;QAAS;QAAY;KAAa;AACxC;uCAEe"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Auth/TokenProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport useClerkToken from '@/hooks/useClerkToken';\n\ninterface TokenProviderProps {\n  children: ReactNode;\n}\n\nexport function TokenProvider({ children }: TokenProviderProps) {\n  // This hook handles storing the Clerk token in localStorage\n  useClerkToken();\n  \n  // Just render children - the hook does the work\n  return <>{children}</>;\n}\n\nexport default TokenProvider; "],"names":[],"mappings":";;;;;AAGA;AAHA;;;AASO,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,4DAA4D;IAC5D,CAAA,GAAA,sHAAA,CAAA,UAAa,AAAD;IAEZ,gDAAgD;IAChD,qBAAO;kBAAG;;AACZ;uCAEe"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport { ClerkProvider } from \"@clerk/nextjs\";\nimport type { AppProps } from \"next/app\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport TokenProvider from \"../components/Auth/TokenProvider\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <ClerkProvider {...pageProps}>\n      <TokenProvider>\n        <AuthProvider>\n          <Component {...pageProps} />\n        </AuthProvider>\n      </TokenProvider>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAHA;;;;;;AAKe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,kKAAA,CAAA,gBAAa;QAAE,GAAG,SAAS;kBAC1B,cAAA,qKAAC,oIAAA,CAAA,UAAa;sBACZ,cAAA,qKAAC,wHAAA,CAAA,eAAY;0BACX,cAAA,qKAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;AAKlC"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Organization/OrganizationOverviewCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useOrganization, useUser } from '@clerk/nextjs';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\ntype OrganizationOverviewProps = {\n  className?: string;\n};\n\nexport default function OrganizationOverviewCard({ className = '' }: OrganizationOverviewProps) {\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const { user, isLoaded: userLoaded } = useUser();\n  const [memberCount, setMemberCount] = useState<number | null>(null);\n  const [userRole, setUserRole] = useState<string | null>(null);\n  const [creationDate, setCreationDate] = useState<string | null>(null);\n  const [orgMetrics, setOrgMetrics] = useState({\n    totalVideos: '32',\n    totalStorage: '1.8 GB',\n    storageUsed: 45, // percentage\n    videoUploads: [65, 42, 73, 50, 89, 78, 93]  // last 7 days trend\n  });\n  \n  useEffect(() => {\n    if (orgLoaded && organization) {\n      // Format creation date\n      const created = new Date(organization.createdAt);\n      setCreationDate(created.toLocaleDateString('en-US', { \n        year: 'numeric', \n        month: 'long', \n        day: 'numeric' \n      }));\n      \n      // Get member count if available\n      if (organization.membersCount !== undefined) {\n        setMemberCount(organization.membersCount);\n      }\n    }\n  }, [orgLoaded, organization]);\n  \n  useEffect(() => {\n    if (userLoaded && user && orgLoaded && organization) {\n      // Find user's role in this organization\n      const membership = user.organizationMemberships?.find(\n        m => m.organization.id === organization.id\n      );\n      \n      if (membership) {\n        setUserRole(membership.role);\n      }\n    }\n  }, [userLoaded, user, orgLoaded, organization]);\n  \n  if (!orgLoaded) {\n    return (\n      <div className={`bg-white rounded-lg shadow-sm p-6 animate-pulse ${className}`}>\n        <div className=\"h-6 bg-gray-200 rounded w-3/4 mb-4\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-2/3 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-1/3\"></div>\n      </div>\n    );\n  }\n  \n  if (!organization) {\n    return (\n      <div className={`bg-white rounded-lg shadow-sm p-6 ${className}`}>\n        <h2 className=\"text-lg font-semibold mb-2\">No Organization Selected</h2>\n        <p className=\"text-gray-600\">Please select or create an organization to see details.</p>\n      </div>\n    );\n  }\n  \n  // Generate a random color if no image is available\n  const getRandomGradient = () => {\n    const gradients = [\n      'from-blue-500 to-indigo-600',\n      'from-purple-500 to-pink-600',\n      'from-green-500 to-teal-600',\n      'from-red-500 to-orange-600',\n      'from-yellow-500 to-amber-600'\n    ];\n    \n    return gradients[Math.floor(Math.random() * gradients.length)];\n  };\n  \n  // Sparkline component for trends\n  const Sparkline = ({ data, color = 'text-indigo-500' }: { data: number[], color?: string }) => {\n    const max = Math.max(...data);\n    const min = Math.min(...data);\n    const range = max - min;\n    const normalize = (val: number) => 100 - ((val - min) / range * 60 + 20); // keep within 20-80% height\n    \n    return (\n      <svg className=\"w-full h-10\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n        <polyline\n          points={data.map((val, i) => `${i * (100 / (data.length - 1))},${normalize(val)}`).join(' ')}\n          fill=\"none\"\n          stroke={color.replace('text-', 'stroke-')}\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className={`${color}`}\n        />\n      </svg>\n    );\n  };\n  \n  // Role badge component\n  const RoleBadge = ({ role }: { role: string }) => {\n    const getRoleColor = (role: string) => {\n      switch (role.toLowerCase()) {\n        case 'admin':\n          return 'bg-purple-100 text-purple-800 border-purple-200';\n        case 'owner':\n          return 'bg-indigo-100 text-indigo-800 border-indigo-200';\n        case 'member':\n        default:\n          return 'bg-blue-100 text-blue-800 border-blue-200';\n      }\n    };\n    \n    return (\n      <span className={`text-xs px-2.5 py-0.5 rounded-full border ${getRoleColor(role)}`}>\n        {role.charAt(0).toUpperCase() + role.slice(1)}\n      </span>\n    );\n  };\n  \n  return (\n    <div className={`bg-white rounded-lg shadow-sm overflow-hidden ${className}`}>\n      {/* Header with background */}\n      <div className={`bg-gradient-to-r ${organization.imageUrl ? 'from-indigo-600 to-blue-700' : getRandomGradient()} p-6 text-white`}>\n        <div className=\"flex items-center\">\n          {organization.imageUrl ? (\n            <div className=\"w-16 h-16 bg-white rounded-lg overflow-hidden mr-4 flex-shrink-0 shadow-md border-2 border-white\">\n              <Image \n                src={organization.imageUrl} \n                alt={organization.name || 'Organization'} \n                width={64} \n                height={64}\n                className=\"object-cover\" \n              />\n            </div>\n          ) : (\n            <div className=\"w-16 h-16 bg-white rounded-lg mr-4 flex-shrink-0 flex items-center justify-center text-indigo-700 font-bold text-2xl shadow-md border-2 border-white\">\n              {organization.name?.charAt(0) || '?'}\n            </div>\n          )}\n          <div>\n            <h2 className=\"text-2xl font-bold\">{organization.name}</h2>\n            <div className=\"flex items-center mt-2\">\n              {userRole && <RoleBadge role={userRole} />}\n              <span className=\"text-xs ml-2 text-indigo-100\">Since {creationDate}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Organization details */}\n      <div className=\"p-6\">\n        <div className=\"flex flex-wrap md:flex-nowrap gap-6\">\n          {/* Left column - Details */}\n          <div className=\"w-full md:w-1/2\">\n            <h3 className=\"text-sm font-medium text-gray-500 uppercase tracking-wider mb-4\">Organization Details</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-xs text-gray-500 mb-1\">Organization ID</label>\n                <div className=\"flex items-center\">\n                  <span className=\"text-gray-900 font-mono text-sm truncate\">{organization.id}</span>\n                  <button \n                    className=\"ml-2 text-gray-400 hover:text-gray-600\" \n                    onClick={() => navigator.clipboard.writeText(organization.id)}\n                    title=\"Copy to clipboard\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-xs text-gray-500 mb-1\">Created On</label>\n                <div className=\"text-gray-900\">{creationDate || 'Unknown'}</div>\n              </div>\n              \n              <div>\n                <label className=\"block text-xs text-gray-500 mb-1\">Members</label>\n                <div className=\"flex items-center\">\n                  <span className=\"text-gray-900 font-medium\">{memberCount !== null ? memberCount : '—'}</span>\n                  <Link href=\"/members\" className=\"ml-2 text-xs text-indigo-600 hover:text-indigo-700\">\n                    View Members\n                  </Link>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-xs text-gray-500 mb-1\">Your Role</label>\n                <div className=\"text-gray-900\">\n                  {userRole ? <RoleBadge role={userRole} /> : 'Unknown'}\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Right column - Metrics */}\n          <div className=\"w-full md:w-1/2\">\n            <h3 className=\"text-sm font-medium text-gray-500 uppercase tracking-wider mb-4\">Storage & Usage</h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"bg-gray-50 rounded-lg p-3\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Total Videos</div>\n                  <div className=\"text-xl font-semibold text-gray-900\">{orgMetrics.totalVideos}</div>\n                </div>\n                \n                <div className=\"bg-gray-50 rounded-lg p-3\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Storage Used</div>\n                  <div className=\"text-xl font-semibold text-gray-900\">{orgMetrics.totalStorage}</div>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"flex justify-between items-center mb-1\">\n                  <label className=\"text-xs text-gray-500\">Storage Capacity</label>\n                  <span className=\"text-xs font-medium text-gray-700\">{orgMetrics.storageUsed}%</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                  <div \n                    className={`h-2.5 rounded-full ${orgMetrics.storageUsed > 80 ? 'bg-red-500' : orgMetrics.storageUsed > 60 ? 'bg-yellow-500' : 'bg-green-500'}`}\n                    style={{ width: `${orgMetrics.storageUsed}%` }}\n                  ></div>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"flex justify-between items-center mb-1\">\n                  <label className=\"text-xs text-gray-500\">Video Uploads (7 days)</label>\n                  <span className=\"text-xs font-medium text-indigo-600\">+12%</span>\n                </div>\n                <Sparkline data={orgMetrics.videoUploads} color=\"text-indigo-500\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Footer with actions */}\n      <div className=\"border-t border-gray-200 bg-gray-50 px-6 py-3 flex justify-between items-center\">\n        <div className=\"text-xs text-gray-500\">\n          {memberCount !== null && memberCount > 0 ? `${memberCount} member${memberCount > 1 ? 's' : ''}` : ''}\n        </div>\n        <div className=\"flex space-x-3\">\n          <Link \n            href=\"/organization-settings\" \n            className=\"text-gray-600 hover:text-gray-900 text-sm font-medium\"\n          >\n            Settings\n          </Link>\n          <Link \n            href=\"/organization-profile\" \n            className=\"text-indigo-600 hover:text-indigo-800 text-sm font-medium\"\n          >\n            Manage Organization →\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1146, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Organization/OrganizationMembersCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useOrganization } from '@clerk/nextjs';\nimport Image from 'next/image';\n\ntype OrganizationMembersCardProps = {\n  className?: string;\n  maxDisplayed?: number;\n};\n\ninterface Member {\n  id: string;\n  role: string;\n  userId: string;\n  firstName?: string;\n  lastName?: string;\n  imageUrl?: string;\n  email?: string;\n  createdAt: Date;\n}\n\nexport default function OrganizationMembersCard({ \n  className = '', \n  maxDisplayed = 5 \n}: OrganizationMembersCardProps) {\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const [members, setMembers] = useState<Member[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  useEffect(() => {\n    async function fetchMembers() {\n      if (!orgLoaded || !organization) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Get organization members\n        const membershipsResult = await organization.getMemberships();\n        \n        // Convert data to our format\n        const formattedMembers: Member[] = [];\n        for (const membership of membershipsResult.data) {\n          const publicUserData = membership.publicUserData;\n          formattedMembers.push({\n            id: membership.id,\n            role: membership.role,\n            userId: publicUserData.userId || membership.id, // fallback to membership id if userId is undefined\n            firstName: publicUserData.firstName || undefined,\n            lastName: publicUserData.lastName || undefined,\n            imageUrl: publicUserData.imageUrl || undefined,\n            email: publicUserData.identifier, // usually the email\n            createdAt: new Date(membership.createdAt)\n          });\n        }\n        \n        // Sort by most recent first\n        formattedMembers.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n        \n        setMembers(formattedMembers);\n      } catch (err) {\n        console.error('Error fetching organization members:', err);\n        setError('Failed to load members');\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    fetchMembers();\n  }, [orgLoaded, organization]);\n  \n  if (!orgLoaded || loading) {\n    return (\n      <div className={`bg-white rounded-lg shadow p-6 animate-pulse ${className}`}>\n        <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\"></div>\n        {[...Array(3)].map((_, i) => (\n          <div key={i} className=\"flex items-center mb-3\">\n            <div className=\"h-10 w-10 bg-gray-200 rounded-full mr-3\"></div>\n            <div>\n              <div className=\"h-4 bg-gray-200 rounded w-32 mb-1\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-24\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className={`bg-white rounded-lg shadow p-6 ${className}`}>\n        <h2 className=\"text-lg font-semibold mb-2\">Organization Members</h2>\n        <p className=\"text-red-500\">{error}</p>\n      </div>\n    );\n  }\n  \n  // Count roles\n  const roleCount = members.reduce((acc, member) => {\n    acc[member.role] = (acc[member.role] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n  \n  return (\n    <div className={`bg-white rounded-lg shadow ${className}`}>\n      <div className=\"p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold\">Organization Members</h2>\n          <span className=\"text-sm text-gray-500\">\n            {members.length} {members.length === 1 ? 'member' : 'members'}\n          </span>\n        </div>\n        \n        {/* Role summary */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {Object.entries(roleCount).map(([role, count]) => (\n            <span \n              key={role} \n              className=\"text-xs px-2 py-1 rounded-full bg-gray-100 text-gray-700\"\n            >\n              {role}: {count}\n            </span>\n          ))}\n        </div>\n        \n        {/* Members list */}\n        <div className=\"space-y-3\">\n          {members.slice(0, maxDisplayed).map(member => (\n            <div key={member.id} className=\"flex items-center\">\n              <div className=\"w-10 h-10 rounded-full bg-gray-200 overflow-hidden mr-3 flex-shrink-0\">\n                {member.imageUrl ? (\n                  <Image \n                    src={member.imageUrl} \n                    alt={`${member.firstName || ''} ${member.lastName || ''}`}\n                    width={40}\n                    height={40}\n                    className=\"object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-full flex items-center justify-center bg-blue-600 text-white text-sm font-bold\">\n                    {member.firstName?.[0] || member.email?.[0] || '?'}\n                  </div>\n                )}\n              </div>\n              <div>\n                <p className=\"font-medium text-sm\">\n                  {member.firstName && member.lastName \n                    ? `${member.firstName} ${member.lastName}`\n                    : member.email || 'Unknown member'}\n                  <span className=\"ml-2 text-xs text-gray-500 font-normal capitalize\">\n                    {member.role}\n                  </span>\n                </p>\n                {member.email && (\n                  <p className=\"text-xs text-gray-500\">{member.email}</p>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        {/* Show more link if needed */}\n        {members.length > maxDisplayed && (\n          <div className=\"mt-4 pt-4 border-t border-gray-100 text-center\">\n            <a \n              href=\"/organization-profile\" \n              className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n            >\n              View all {members.length} members\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Subscription/SubscriptionStatusCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useOrganization } from '@clerk/nextjs';\n\ntype SubscriptionStatusCardProps = {\n  className?: string;\n};\n\ninterface SubscriptionInfo {\n  id: string;\n  status: string;\n  planName: string;\n  currentPeriodEnd: string;\n  cancelAtPeriodEnd: boolean;\n  price?: string;\n  interval?: string;\n}\n\nexport default function SubscriptionStatusCard({ className = '' }: SubscriptionStatusCardProps) {\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const [subscription, setSubscription] = useState<SubscriptionInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [subscriptionService, setSubscriptionService] = useState<any>(null);\n  \n  // Load subscription service\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      import('@/api-connection/subscriptions').then((module) => {\n        setSubscriptionService(module.default);\n      });\n    }\n  }, []);\n  \n  // Fetch subscription data\n  useEffect(() => {\n    if (!orgLoaded || !organization || !subscriptionService) {\n      return;\n    }\n    \n    async function fetchSubscription() {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Make sure organization ID is set\n        if (organization?.id) {\n          localStorage.setItem('currentOrganizationId', organization.id);\n        }\n        \n        const result = await subscriptionService.getCurrentSubscription();\n        \n        if (result && result.subscription) {\n          const sub = result.subscription;\n          setSubscription({\n            id: sub.id,\n            status: sub.status,\n            planName: sub.plan?.name || 'Unknown Plan',\n            currentPeriodEnd: new Date(sub.currentPeriodEnd * 1000).toLocaleDateString(),\n            cancelAtPeriodEnd: sub.cancelAtPeriodEnd,\n            price: sub.plan?.amount \n              ? `$${(sub.plan.amount / 100).toFixed(2)}` \n              : undefined,\n            interval: sub.plan?.interval\n          });\n        } else {\n          // No active subscription\n          setSubscription(null);\n        }\n      } catch (err) {\n        console.error('Error fetching subscription:', err);\n        setError('Unable to load subscription information');\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    fetchSubscription();\n  }, [orgLoaded, organization, subscriptionService]);\n  \n  if (!orgLoaded || loading) {\n    return (\n      <div className={`bg-white rounded-lg shadow p-6 animate-pulse ${className}`}>\n        <div className=\"h-6 bg-gray-200 rounded w-1/2 mb-4\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className={`bg-white rounded-lg shadow p-6 ${className}`}>\n        <h2 className=\"text-lg font-semibold mb-2\">Subscription Status</h2>\n        <p className=\"text-red-500\">{error}</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`bg-white rounded-lg shadow ${className}`}>\n      <div className=\"p-6\">\n        <h2 className=\"text-lg font-semibold mb-4\">Subscription Status</h2>\n        \n        {!subscription ? (\n          <div className=\"text-center py-4\">\n            <p className=\"text-gray-500 mb-4\">No active subscription found</p>\n            <a \n              href=\"/pricing\" \n              className=\"inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              View Pricing Options\n            </a>\n          </div>\n        ) : (\n          <div>\n            <div className=\"flex items-center mb-4\">\n              <span className={`w-3 h-3 rounded-full mr-2 ${\n                subscription.status === 'active' ? 'bg-green-500' : \n                subscription.status === 'past_due' ? 'bg-yellow-500' : 'bg-red-500'\n              }`}></span>\n              <span className=\"font-medium capitalize\">{subscription.status}</span>\n              \n              {subscription.cancelAtPeriodEnd && (\n                <span className=\"ml-2 text-xs bg-red-100 text-red-800 px-2 py-1 rounded\">\n                  Cancels at period end\n                </span>\n              )}\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Plan</span>\n                <span className=\"font-medium\">{subscription.planName}</span>\n              </div>\n              \n              {subscription.price && subscription.interval && (\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Price</span>\n                  <span className=\"font-medium\">\n                    {subscription.price}/{subscription.interval}\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Current Period Ends</span>\n                <span className=\"font-medium\">{subscription.currentPeriodEnd}</span>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 pt-4 border-t border-gray-100 text-right\">\n              <a \n                href={`/subscriptions/manage`} \n                className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n              >\n                Manage Subscription\n              </a>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1789, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/Dashboard/DashboardMenu.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useClerk, useUser } from '@clerk/nextjs';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\ntype DashboardMenuProps = {\n  className?: string;\n};\n\nexport default function DashboardMenu({ className = '' }: DashboardMenuProps) {\n  const { signOut } = useClerk();\n  const { user, isLoaded } = useUser();\n  const router = useRouter();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false); // For dark mode toggle demo\n  const menuRef = useRef<HTMLDivElement>(null);\n  const { tenantId } = router.query;\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Check for dark mode from localStorage on initial load\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const isDark = localStorage.getItem('darkMode') === 'true';\n      setDarkMode(isDark);\n    }\n  }, []);\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleSignOut = async () => {\n    await signOut(() => {\n      router.push('/sign-in');\n    });\n  };\n\n  // Toggle dark mode and save preference to localStorage\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('darkMode', String(newMode));\n      \n      // This would typically update body classes or theme context\n      // For demo purposes, we're just storing the preference\n    }\n  };\n\n  // Build the proper profile URL with tenant context if available\n  const getProfileUrl = () => {\n    if (tenantId && typeof tenantId === 'string') {\n      return `/${tenantId}/profile`;\n    }\n    return '/profile';\n  };\n\n  if (!isLoaded) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"h-10 w-10 bg-gray-200 rounded-full animate-pulse\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`relative ${className}`} ref={menuRef}>\n      {/* User avatar/button that toggles the menu */}\n      <button\n        onClick={toggleMenu}\n        className=\"flex items-center space-x-2 p-1 rounded-full hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 transition-colors\"\n        aria-expanded={isMenuOpen}\n        aria-haspopup=\"true\"\n      >\n        <div className=\"h-10 w-10 rounded-full overflow-hidden border-2 border-white shadow-sm relative\">\n          {user?.imageUrl ? (\n            <Image\n              src={user.imageUrl}\n              alt={user.fullName || 'User'}\n              width={40}\n              height={40}\n              className=\"object-cover\"\n            />\n          ) : (\n            <div className=\"h-full w-full flex items-center justify-center bg-indigo-100 text-indigo-600\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n              </svg>\n            </div>\n          )}\n          <div className=\"absolute bottom-0 right-0 h-3 w-3 rounded-full bg-green-400 border-2 border-white\"></div>\n        </div>\n        <span className=\"hidden md:block text-sm font-medium\">\n          {user?.fullName || user?.username || 'User'}\n        </span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`h-4 w-4 text-gray-500 transition-transform duration-200 ${isMenuOpen ? 'rotate-180' : ''}`}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n\n      {/* Dropdown menu */}\n      {isMenuOpen && (\n        <div className=\"absolute right-0 mt-2 w-64 bg-white rounded-xl shadow-lg py-1 z-50 border border-gray-200\">\n          {/* User header section */}\n          <div className=\"p-4 border-b border-gray-100\">\n            <div className=\"flex items-center\">\n              <div className=\"h-12 w-12 rounded-full overflow-hidden mr-3\">\n                {user?.imageUrl ? (\n                  <Image\n                    src={user.imageUrl}\n                    alt={user.fullName || 'User'}\n                    width={48}\n                    height={48}\n                    className=\"object-cover\"\n                  />\n                ) : (\n                  <div className=\"h-full w-full flex items-center justify-center bg-indigo-100 text-indigo-600\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                )}\n              </div>\n              <div>\n                <p className=\"text-sm font-semibold text-gray-900\">\n                  {user?.fullName || user?.username || 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 truncate mt-1\">\n                  {user?.primaryEmailAddress?.emailAddress || ''}\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          {/* Menu items */}\n          <div className=\"py-1\">\n            <div className=\"px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider\">\n              Account\n            </div>\n            \n            <Link \n              href={getProfileUrl()}\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\"\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n              </svg>\n              Your Profile\n            </Link>\n            \n            <Link \n              href=\"/settings\"\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\"\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              Settings\n            </Link>\n            \n            {/* Dark mode toggle */}\n            <button\n              onClick={toggleDarkMode}\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\"\n            >\n              {darkMode ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                </svg>\n              )}\n              {darkMode ? 'Light Mode' : 'Dark Mode'}\n            </button>\n          </div>\n          \n          <div className=\"py-1 border-t border-gray-100\">\n            <div className=\"px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider\">\n              Content\n            </div>\n            \n            <Link \n              href=\"/upload-video\"\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\"\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n              </svg>\n              Upload Video\n            </Link>\n            \n            <Link \n              href=\"/my-videos\"\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\"\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n              </svg>\n              My Videos\n            </Link>\n            \n            <Link \n              href=\"/analytics\"\n              className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\"\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n              </svg>\n              Analytics\n            </Link>\n          </div>\n          \n          {/* Sign out button */}\n          <div className=\"py-1 border-t border-gray-100\">\n            <button\n              onClick={handleSignOut}\n              className=\"flex items-center px-4 py-2 text-sm text-red-600 hover:bg-red-50 w-full text-left\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n              </svg>\n              Sign out\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2390, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.BACKEND_URL || 'http://localhost:4000/api', \n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true \n});\n\napi.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('accessToken');\n  if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, (error: Error) => {\n  return  Promise.reject(error);\n})\n\napi.interceptors.response.use((response: AxiosResponse) => {\n  return response;\n}, async (error) => {\n  const originalRequest = error.config;\n\n  if(error.response && error.response.status === 401 && !originalRequest._retry) {\n      try {\n          const response = await api.post('/refresh-token');\n          const newAccessToken = response.data.accessToken;\n\n          sessionStorage.setItem('accessToken', newAccessToken);\n          \n          api.defaults.headers.common['Authorization'] = `Bearer ${newAccessToken}`;\n          return api(originalRequest);\n      } catch (refreshError) {\n          console.error('Refresh token failed', refreshError);\n          sessionStorage.removeItem('accessToken');\n      }\n  }\n\n  return Promise.reject(error);\n});\n\nexport default api;"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,MAAM,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS,QAAQ,GAAG,CAAC,WAAW,IAAI;IACpC,SAAS;QACP,gBAAgB;IAClB;IACA,iBAAiB;AACnB;AAEA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC3B,MAAM,QAAQ,eAAe,OAAO,CAAC;IACrC,IAAI,OAAO;QACP,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IACvD;IACA,OAAO;AACT,GAAG,CAAC;IACF,OAAQ,QAAQ,MAAM,CAAC;AACzB;AAEA,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,OAAO;AACT,GAAG,OAAO;IACR,MAAM,kBAAkB,MAAM,MAAM;IAEpC,IAAG,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,MAAM,KAAK,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC3E,IAAI;YACA,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC;YAChC,MAAM,iBAAiB,SAAS,IAAI,CAAC,WAAW;YAEhD,eAAe,OAAO,CAAC,eAAe;YAEtC,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,gBAAgB;YACzE,OAAO,IAAI;QACf,EAAE,OAAO,cAAc;YACnB,QAAQ,KAAK,CAAC,wBAAwB;YACtC,eAAe,UAAU,CAAC;QAC9B;IACJ;IAEA,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAEe"}},
    {"offset": {"line": 2434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2441, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api-connection/videos.ts"],"sourcesContent":["import api from '../api';\nimport axios from 'axios';\n\nexport interface VideoData {\n  uid: string;\n  thumbnail: string;\n  preview: string;\n  readyToStream: boolean;\n  readyToStreamAt: string;\n  status: {\n    state: string;\n    pctComplete: string;\n    errorReasonCode: string;\n    errorReasonText: string;\n  };\n  meta: {\n    filename: string;\n    filetype: string;\n    name: string;\n    relativePath: string;\n    type: string;\n  };\n  duration: number;\n  created: string;\n  modified: string;\n  size: number;\n  input: {\n    width: number;\n    height: number;\n  };\n  playback: {\n    hls: string;\n    dash: string;\n  };\n}\n\nexport interface VideoApiResponse {\n  success: boolean;\n  status: number;\n  message: string;\n  data: {\n    result: VideoData[];\n  };\n}\n\nexport interface UploadUrlResponse {\n  uploadURL: string;\n  uid: string;\n}\n\nexport interface VideoStatusResponse {\n  success: boolean;\n  readyToStream: boolean;\n  status: string;\n  video: {\n    uid: string;\n    readyToStream: boolean;\n    thumbnail: string;\n    playback: {\n      hls: string;\n      dash: string;\n    };\n    created: string;\n    duration: number;\n    status: {\n      state: string;\n    };\n  };\n}\n\nconst videoService = {\n  /**\n   * Test Cloudflare connection and get a sample video\n   */\n  testCloudflareConnection: async (): Promise<VideoApiResponse> => {\n    try {\n      const response = await api.get<VideoApiResponse>('videos/test-cloudflare-connection');\n      return response.data;\n    } catch (error) {\n      console.error('Error testing Cloudflare connection:', error);\n      // Handle common errors with better messages\n      if (axios.isAxiosError(error)) {\n        if (error.code === 'ECONNREFUSED' || error.message.includes('Network Error')) {\n          throw new Error('Network Error: Cannot connect to the video API server. Please ensure the backend server is running.');\n        } else if (error.response) {\n          throw new Error(`API Error (${error.response.status}): ${error.response.data?.message || error.message}`);\n        }\n      }\n      throw error;\n    }\n  },\n\n  /**\n   * Get a list of all videos\n   */\n  getAllVideos: async (): Promise<VideoApiResponse> => {\n    try {\n      const response = await api.get<VideoApiResponse>('videos');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get a single video by its UID\n   * @param uid The video's unique identifier\n   */\n  getVideoByUid: async (uid: string): Promise<VideoApiResponse> => {\n    try {\n      const response = await api.get<VideoApiResponse>(`videos/${uid}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching video with UID ${uid}:`, error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get a one-time upload URL for direct creator uploads\n   * @param maxDurationSeconds The maximum duration for the video in seconds\n   */\n  getUploadUrl: async (maxDurationSeconds: number = 3600): Promise<UploadUrlResponse> => {\n    try {\n      console.log('Requesting upload URL with maxDurationSeconds:', maxDurationSeconds);\n      const response = await api.post<{ success: boolean; status: number; message: string; data: UploadUrlResponse }>('videos/get-upload-url', {\n        maxDurationSeconds,\n      });\n      console.log('Upload URL response:', response.data);\n      \n      if (!response.data.success || !response.data.data.uploadURL) {\n        throw new Error(response.data.message || 'Failed to get upload URL');\n      }\n      \n      return response.data.data;\n    } catch (error) {\n      console.error('Error getting upload URL:', error);\n      if (axios.isAxiosError(error)) {\n        if (error.code === 'ECONNREFUSED' || error.message.includes('Network Error')) {\n          console.error('Network error details:', {\n            url: error.config?.url,\n            baseURL: api.defaults.baseURL,\n            message: error.message\n          });\n          throw new Error('Network Error: Cannot connect to the video API server. Please ensure the backend server is running.');\n        } else if (error.response) {\n          console.error('API error details:', {\n            status: error.response.status,\n            statusText: error.response.statusText,\n            data: error.response.data,\n            headers: error.response.headers\n          });\n          throw new Error(`API Error (${error.response.status}): ${error.response.data?.message || error.message}`);\n        }\n      }\n      throw error;\n    }\n  },\n\n  /**\n   * Upload a video file to Cloudflare Stream using a one-time upload URL\n   * @param uploadURL The one-time upload URL from getUploadUrl\n   * @param file The video file to upload\n   * @param onUploadProgress Optional callback for upload progress\n   */\n  uploadVideoFile: async (\n    uploadURL: string, \n    file: File, \n    onUploadProgress?: (progress: number) => void\n  ): Promise<void> => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      await axios.post(uploadURL, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        onUploadProgress: (progressEvent) => {\n          if (progressEvent.total && onUploadProgress) {\n            const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n            onUploadProgress(progress);\n          }\n        },\n      });\n    } catch (error) {\n      console.error('Error uploading video file:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Check the status of an uploaded video\n   * @param videoId The video ID/UID\n   */\n  checkVideoStatus: async (videoId: string): Promise<VideoStatusResponse> => {\n    try {\n      const response = await api.get<VideoStatusResponse>(`videos/status/${videoId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error checking status for video ${videoId}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default videoService; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2579, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/%5BtenantId%5D/dashboard/index.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useRef, Fragment } from \"react\";\nimport { useOrganization } from \"@clerk/nextjs\";\nimport { useRouter } from \"next/router\";\nimport dynamic from 'next/dynamic';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Dialog, Transition } from '@headlessui/react';\n\n// Import components for organization dashboard\nimport OrganizationOverviewCard from '@/components/Organization/OrganizationOverviewCard';\nimport OrganizationMembersCard from '@/components/Organization/OrganizationMembersCard';\nimport SubscriptionStatusCard from '@/components/Subscription/SubscriptionStatusCard';\nimport DashboardMenu from '@/components/Dashboard/DashboardMenu';\n\n// Import video service\nimport videoService, { VideoData } from '@/api-connection/videos';\n\n// Import SignOutComponent with no SSR\nconst SignOutComponent = dynamic(\n  () => import('@/components/ui/SignOutComponent/SignOutComponent'),\n  { ssr: false }\n);\n\n// ClientOnly wrapper component\nconst ClientOnly = ({ children }: { children: React.ReactNode }) => {\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) return null;\n  return <>{children}</>;\n};\n\ninterface EmbedModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  video: VideoData;\n}\n\n// Embed Code Modal Component\nconst EmbedModal = ({ isOpen, onClose, video }: EmbedModalProps) => {\n  const [copied, setCopied] = useState<string | null>(null);\n  const embedCodeRef = useRef<HTMLTextAreaElement>(null);\n  const hlsUrlRef = useRef<HTMLInputElement>(null);\n  const dashUrlRef = useRef<HTMLInputElement>(null);\n  \n  const appUrl = typeof window !== 'undefined' ? window.location.origin : '';\n  \n  // Create iframe embed code\n  const embedCode = `<iframe\n  src=\"${appUrl}/embed/${video.uid}\"\n  style=\"border: none; width: 100%; height: 400px;\"\n  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  allowfullscreen>\n</iframe>`;\n\n  // Handle copy to clipboard functionality\n  const copyToClipboard = (text: string, type: string) => {\n    navigator.clipboard.writeText(text);\n    setCopied(type);\n    setTimeout(() => setCopied(null), 2000);\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-2xl transform overflow-hidden rounded-xl bg-white p-6 shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 border-b pb-3\">\n                  Embed \"{video.meta?.name || 'Video'}\"\n                </Dialog.Title>\n                \n                <div className=\"mt-4 space-y-6\">\n                  {/* Embed Code */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Embed Code\n                    </label>\n                    <div className=\"mt-1 relative rounded-md shadow-sm\">\n                      <textarea\n                        ref={embedCodeRef}\n                        rows={4}\n                        className=\"block w-full font-mono text-sm border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\n                        readOnly\n                        value={embedCode}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => copyToClipboard(embedCode, 'embed')}\n                        className=\"absolute top-2 right-2 inline-flex items-center p-1.5 border border-transparent rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                      >\n                        {copied === 'embed' ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        ) : (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n                          </svg>\n                        )}\n                      </button>\n                    </div>\n                    <p className=\"mt-1 text-xs text-gray-500\">\n                      Copy this code and paste it into your website HTML to embed the video.\n                    </p>\n                  </div>\n                  \n                  {/* HLS URL */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      HLS Stream URL (for iOS, Safari, Chrome, Edge)\n                    </label>\n                    <div className=\"mt-1 relative rounded-md shadow-sm\">\n                      <input\n                        ref={hlsUrlRef}\n                        type=\"text\"\n                        className=\"block w-full font-mono text-sm border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\n                        readOnly\n                        value={video.playback?.hls || ''}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => copyToClipboard(video.playback?.hls || '', 'hls')}\n                        className=\"absolute inset-y-0 right-0 px-3 py-1.5 flex items-center bg-gray-50 rounded-r-md border-l border-gray-300 text-gray-500 hover:text-gray-900\"\n                      >\n                        {copied === 'hls' ? 'Copied!' : 'Copy'}\n                      </button>\n                    </div>\n                    <p className=\"mt-1 text-xs text-gray-500\">\n                      Use this URL with a video player that supports HLS streams.\n                    </p>\n                  </div>\n                  \n                  {/* DASH URL */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      DASH Stream URL (for Android, Firefox)\n                    </label>\n                    <div className=\"mt-1 relative rounded-md shadow-sm\">\n                      <input\n                        ref={dashUrlRef}\n                        type=\"text\"\n                        className=\"block w-full font-mono text-sm border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\n                        readOnly\n                        value={video.playback?.dash || ''}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => copyToClipboard(video.playback?.dash || '', 'dash')}\n                        className=\"absolute inset-y-0 right-0 px-3 py-1.5 flex items-center bg-gray-50 rounded-r-md border-l border-gray-300 text-gray-500 hover:text-gray-900\"\n                      >\n                        {copied === 'dash' ? 'Copied!' : 'Copy'}\n                      </button>\n                    </div>\n                    <p className=\"mt-1 text-xs text-gray-500\">\n                      Use this URL with a video player that supports DASH streams.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 border-t border-gray-200 pt-4 flex justify-end\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-100 px-4 py-2 text-sm font-medium text-indigo-900 hover:bg-indigo-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2\"\n                    onClick={onClose}\n                  >\n                    Close\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Dashboard component with no SSR\nconst DashboardPage = () => {\n  const [subscription, setSubscription] = useState<null | any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [videos, setVideos] = useState<VideoData[]>([]);\n  const [recentActivity, setRecentActivity] = useState<any[]>([]);\n  const [videoStats, setVideoStats] = useState({ total: 0, processing: 0, ready: 0 });\n  const [apiTestResult, setApiTestResult] = useState<any>(null);\n  const [apiTestLoading, setApiTestLoading] = useState(false);\n  const [debugInfo, setDebugInfo] = useState<any>({});\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const router = useRouter();\n  const { tenantId } = router.query;\n  const redirectAttempted = useRef(false);\n  const subscriptionRequested = useRef(false);\n  \n  // State for selected video and embed modal\n  const [selectedVideo, setSelectedVideo] = useState<VideoData | null>(null);\n  const [isEmbedModalOpen, setIsEmbedModalOpen] = useState(false);\n  \n  // State for weather widget (mock data)\n  const [weather, setWeather] = useState({ \n    temp: '24°C', \n    condition: 'Sunny', \n    location: 'San Francisco',\n    icon: '☀️' \n  });\n  \n  // Initialize state without localStorage\n  const [dbOrgId, setDbOrgId] = useState<string | null>(null);\n  const [subscriptionService, setSubscriptionService] = useState<any>(null);\n  \n  // Dashboard stats mock data\n  const [stats, setStats] = useState({\n    totalViews: '12.5K',\n    avgWatchTime: '6:32',\n    engagement: '87%',\n    uploadsThisMonth: 12\n  });\n  \n  // Load the subscription service module safely\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Only load on client side\n      import('@/api-connection/subscriptions').then((module) => {\n        setSubscriptionService(module.default);\n      });\n    }\n  }, []);\n  \n  // Load localStorage values only on client\n  useEffect(() => {\n    const savedOrgId = localStorage.getItem('dbOrganizationId');\n    if (savedOrgId) {\n      setDbOrgId(savedOrgId);\n    }\n    \n    // Generate mock activity data\n    const mockActivity = [\n      { id: 1, type: 'upload', user: 'Alex Rivera', content: 'uploaded a new video: \"Product Demo\"', time: '10 minutes ago', avatar: 'https://randomuser.me/api/portraits/men/32.jpg' },\n      { id: 2, type: 'comment', user: 'Maria Chen', content: 'commented on \"Marketing Strategy\"', time: '2 hours ago', avatar: 'https://randomuser.me/api/portraits/women/44.jpg' },\n      { id: 3, type: 'view', user: 'John Smith', content: 'viewed \"Q1 Results\"', time: '5 hours ago', avatar: 'https://randomuser.me/api/portraits/men/41.jpg' },\n      { id: 4, type: 'share', user: 'Lisa Johnson', content: 'shared \"Company Update\" with the marketing team', time: 'Yesterday', avatar: 'https://randomuser.me/api/portraits/women/63.jpg' },\n      { id: 5, type: 'upload', user: 'David Wilson', content: 'updated \"Team Building\" video', time: 'Yesterday', avatar: 'https://randomuser.me/api/portraits/men/54.jpg' }\n    ];\n    \n    setRecentActivity(mockActivity);\n  }, []);\n    \n  // Force Clerk organization context into localStorage\n  useEffect(() => {\n    if (orgLoaded && organization?.id) {\n      localStorage.setItem('currentOrganizationId', organization.id);\n      console.log('Set organization ID from Clerk:', organization.id);\n    }\n  }, [orgLoaded, organization]);\n  \n  // Fetch videos\n  useEffect(() => {\n    if (orgLoaded && organization?.id) {\n      fetchVideos();\n    }\n  }, [orgLoaded, organization]);\n  \n  const fetchVideos = async () => {\n    setLoading(true);\n    try {\n      const response = await videoService.getAllVideos();\n      if (response.success) {\n        const videoData = response.data.result || [];\n        setVideos(videoData.slice(0, 6)); // Get just the first 6 videos for preview\n        \n        // Calculate stats\n        const total = videoData.length;\n        const processing = videoData.filter((v: VideoData) => v.status?.state === 'processing').length;\n        const ready = videoData.filter((v: VideoData) => v.status?.state === 'ready').length;\n        \n        setVideoStats({ total, processing, ready });\n      }\n    } catch (err: any) {\n      console.error(\"Error fetching videos:\", err);\n      setError(\"Failed to load videos\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Open embed modal for a specific video\n  const openEmbedModal = (video: VideoData) => {\n    setSelectedVideo(video);\n    setIsEmbedModalOpen(true);\n  };\n\n  const fetchSubscription = async () => {\n    // Don't attempt to fetch on server or if service isn't loaded\n    if (typeof window === 'undefined' || !subscriptionService) return;\n    \n    setLoading(true);\n    setError(null);\n    try {\n      // Use the Clerk organization ID directly\n      if (organization?.id) {\n        console.log('Using organization ID from Clerk for API call:', organization.id);\n        localStorage.setItem('currentOrganizationId', organization.id);\n      }\n      \n      // Get or sync database organization ID if needed\n      const currentDbOrgId = dbOrgId || localStorage.getItem('dbOrganizationId');\n      if (!currentDbOrgId && organization?.id) {\n        console.log('No database organization ID available - trying to sync user profile first');\n        try {\n          await testCreateOrganization();\n          // Small delay to ensure new ID is saved\n          await new Promise(resolve => setTimeout(resolve, 500));\n        } catch (err) {\n          console.error('Failed to sync user profile:', err);\n        }\n      }\n      \n      // Small delay to ensure localStorage is set\n      await new Promise(resolve => setTimeout(resolve, 300));\n      \n      const subscription = await subscriptionService.getCurrentSubscription();\n      console.log('Subscription loaded:', subscription);\n      setSubscription(subscription);\n    } catch (err: any) {\n      console.error(\"Error fetching subscription:\", err);\n      const errorMessage = err?.response?.data?.message || err.message || \"Failed to load subscription details\";\n      setError(errorMessage);\n      \n      // Check for token issues\n      if (typeof window !== 'undefined' && !localStorage.getItem('token')) {\n        setError('Authentication token is missing. Try signing in again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  } \n  \n  const handleRetry = () => {\n    // Don't proceed if we're on the server or service isn't loaded\n    if (typeof window === 'undefined' || !subscriptionService) return;\n    \n    // Reset subscription request flag\n    subscriptionRequested.current = false;\n    \n    // Refresh the token first\n    if (window.dispatchEvent) {\n      window.dispatchEvent(new Event('refresh-token'));\n    }\n    \n    // Then retry the subscription fetch after a short delay\n    setTimeout(() => {\n      fetchSubscription();\n    }, 500);\n  };\n\n  // Test creating organization in the database\n  const testCreateOrganization = async () => {\n    if (typeof window === 'undefined') return;\n    \n    setApiTestLoading(true);\n    setApiTestResult(null);\n    \n    try {\n      const orgId = organization?.id || localStorage.getItem('currentOrganizationId');\n      const token = localStorage.getItem('token');\n      \n      if (!orgId || !token) {\n        throw new Error('Missing required organization ID or token');\n      }\n      \n      const response = await fetch('http://localhost:4000/api/auth/me', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'X-Organization-Id': orgId\n        }\n      });\n      \n      const responseText = await response.text();\n      let responseData;\n      \n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = { text: responseText };\n      }\n      \n      if (responseData?.organization?.id) {\n        localStorage.setItem('dbOrganizationId', responseData.organization.id);\n        setDbOrgId(responseData.organization.id);\n        console.log('Saved database organization ID:', responseData.organization.id);\n      }\n      \n      setApiTestResult({\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries([...response.headers.entries()]),\n        data: responseData\n      });\n      \n      // After syncing, try to get subscription again\n      if (response.ok) {\n        setTimeout(() => {\n          subscriptionRequested.current = false;\n          fetchSubscription();\n        }, 1000);\n      }\n    } catch (err: any) {\n      setApiTestResult({\n        error: err.message,\n        stack: err.stack\n      });\n    } finally {\n      setApiTestLoading(false);\n    }\n  };\n\n  // Direct API testing function\n  const testDirectApiCall = async () => {\n    if (typeof window === 'undefined') return;\n    \n    setApiTestLoading(true);\n    setApiTestResult(null);\n    \n    try {\n      const orgId = dbOrgId || localStorage.getItem('dbOrganizationId') || organization?.id || localStorage.getItem('currentOrganizationId');\n      const token = localStorage.getItem('token');\n      \n      if (!orgId || !token) {\n        throw new Error('Missing required organization ID or token');\n      }\n      \n      console.log('Making direct API call with organization ID:', orgId);\n      \n      const response = await fetch(`http://localhost:4000/api/subscriptions/${orgId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'X-Organization-Id': organization?.id || localStorage.getItem('currentOrganizationId') || ''\n        }\n      });\n      \n      const responseText = await response.text();\n      let responseData;\n      \n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = { text: responseText };\n      }\n      \n      setApiTestResult({\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries([...response.headers.entries()]),\n        data: responseData\n      });\n      \n      // If successful, update subscription state\n      if (response.ok && responseData?.subscription) {\n        setSubscription(responseData.subscription);\n      }\n    } catch (err: any) {\n      setApiTestResult({\n        error: err.message,\n        stack: err.stack\n      });\n    } finally {\n      setApiTestLoading(false);\n    }\n  };\n\n  // Try verifying token directly\n  const testTokenVerification = async () => {\n    if (typeof window === 'undefined') return;\n    \n    setApiTestLoading(true);\n    setApiTestResult(null);\n    \n    try {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        throw new Error('Missing token');\n      }\n      \n      const response = await fetch('http://localhost:4000/api/auth/verify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token })\n      });\n      \n      const responseText = await response.text();\n      let responseData;\n      \n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = { text: responseText };\n      }\n      \n      setApiTestResult({\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries([...response.headers.entries()]),\n        data: responseData\n      });\n      \n      if (response.ok && responseData?.success) {\n        setTimeout(() => {\n          // Force the organization info to localStorage\n          if (responseData?.organization?.id) {\n            localStorage.setItem('currentOrganizationId', responseData.organization.id);\n          }\n          \n          // Retry subscription fetch\n          subscriptionRequested.current = false;\n          fetchSubscription();\n        }, 1000);\n      }\n    } catch (err: any) {\n      setApiTestResult({\n        error: err.message,\n        stack: err.stack\n      });\n    } finally {\n      setApiTestLoading(false);\n    }\n  };\n\n  // Render video card\n  const VideoCard = ({ video }: { video: VideoData }) => (\n    <div className=\"bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow border border-gray-100 group\">\n      <div className=\"aspect-video bg-gray-100 relative\">\n        {video.thumbnail ? (\n          <Image \n            src={video.thumbnail} \n            alt={video.meta?.name || 'Video thumbnail'} \n            fill\n            className=\"object-cover\"\n          />\n        ) : (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-200 text-gray-400\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n            </svg>\n          </div>\n        )}\n        <div className=\"absolute bottom-2 right-2 bg-black bg-opacity-75 text-white text-xs px-2 py-1 rounded\">\n          {Math.floor(video.duration / 60)}:{(video.duration % 60).toString().padStart(2, '0')}\n        </div>\n        {video.status?.state === 'processing' && (\n          <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n            <div className=\"bg-white rounded-lg text-gray-800 text-xs py-1 px-3 font-medium animate-pulse\">\n              Processing...\n            </div>\n          </div>\n        )}\n        \n        {/* Quick action buttons */}\n        <div className=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center gap-3\">\n          <Link href={`/videos/${video.uid}`} className=\"bg-white rounded-full p-2 text-gray-800 hover:text-indigo-600 hover:shadow-md transition-all\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n            </svg>\n          </Link>\n          <button \n            onClick={() => openEmbedModal(video)} \n            className=\"bg-white rounded-full p-2 text-gray-800 hover:text-indigo-600 hover:shadow-md transition-all\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div className=\"p-3\">\n        <Link href={`/videos/${video.uid}`}>\n          <h3 className=\"font-medium text-gray-900 truncate group-hover:text-indigo-600 transition-colors\">\n            {video.meta?.name || 'Untitled Video'}\n          </h3>\n          <div className=\"flex justify-between items-center mt-1\">\n            <p className=\"text-gray-500 text-xs\">{new Date(video.created).toLocaleDateString()}</p>\n            <div \n              className={`text-xs px-2 py-0.5 rounded-full ${\n                video.status?.state === 'ready' \n                  ? 'bg-green-100 text-green-800' \n                  : 'bg-yellow-100 text-yellow-800'\n              }`}\n            >\n              {video.status?.state || 'processing'}\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Top Navigation Bar */}\n      <header className=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Top bar with branding and global actions */}\n          <div className=\"flex items-center justify-between h-16 px-4 sm:px-6 lg:px-8\">\n            {/* Logo and organization selector */}\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <div className=\"text-2xl font-bold text-indigo-600 mr-1\">VidStream</div>\n                <span className=\"hidden md:inline-block text-xs px-2 py-0.5 bg-indigo-100 text-indigo-800 rounded-full\">Beta</span>\n              </div>\n              \n              {/* Organization selector button */}\n              {organization?.name && (\n                <div className=\"hidden md:flex ml-6 items-center border-l pl-6 border-gray-200\">\n                  <button className=\"group flex items-center text-gray-700 hover:text-indigo-600\">\n                    <div className=\"w-6 h-6 rounded-md bg-indigo-100 text-indigo-600 flex items-center justify-center mr-2 group-hover:bg-indigo-200 transition-colors\">\n                      {organization.name.charAt(0)}\n                    </div>\n                    <span className=\"text-sm font-medium\">{organization.name}</span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1 text-gray-400 group-hover:text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </button>\n                </div>\n              )}\n            </div>\n            \n            {/* Search and right navigation */}\n            <div className=\"flex items-center space-x-4\">\n              {/* Search bar */}\n              <div className=\"hidden md:block relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search content...\"\n                  className=\"w-64 bg-gray-100 rounded-full pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:bg-white transition-all\"\n                />\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n              \n              {/* Nav actions */}\n              <div className=\"flex items-center space-x-3\">\n                {/* Help button */}\n                <button className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </button>\n                \n                {/* Notifications */}\n                <button className=\"p-1.5 rounded-full text-gray-500 hover:bg-gray-100 hover:text-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 relative\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                  </svg>\n                  <span className=\"absolute top-0 right-0 h-4 w-4 bg-red-500 text-xs text-white font-bold rounded-full flex items-center justify-center\">3</span>\n                </button>\n                \n                {/* Create button */}\n                <button className=\"hidden sm:flex items-center space-x-1 bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-1.5 rounded-md text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  <span>New</span>\n                </button>\n                \n                {/* User profile */}\n                <DashboardMenu className=\"ml-1\" />\n              </div>\n            </div>\n          </div>\n          \n          {/* Navigation tabs */}\n          <div className=\"px-4 sm:px-6 lg:px-8 border-t border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n              <a \n                href=\"#dashboard\" \n                className=\"border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\"\n                aria-current=\"page\"\n              >\n                Dashboard\n              </a>\n              <a \n                href=\"/my-videos\" \n                className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\"\n              >\n                Videos\n              </a>\n              <a \n                href=\"/analytics\" \n                className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\"\n              >\n                Analytics\n              </a>\n              <a \n                href=\"/team\" \n                className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\"\n              >\n                Team\n              </a>\n              <a \n                href=\"/settings\" \n                className=\"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\"\n              >\n                Settings\n              </a>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"p-6 max-w-7xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">Organization Dashboard</h1>\n          \n          <div className=\"mb-10\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"lg:col-span-2\">\n                <div className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden\">\n                  <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-100\">\n                    <h2 className=\"text-lg font-semibold text-gray-800\">Organization Overview</h2>\n                  </div>\n                  <div className=\"p-6\">\n                    <OrganizationOverviewCard />\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden\">\n                  <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-100\">\n                    <h2 className=\"text-lg font-semibold text-gray-800\">Subscription Status</h2>\n                  </div>\n                  <div className=\"p-6\">\n                    <SubscriptionStatusCard />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mb-10\">\n            <div className=\"flex items-center mb-6\">\n              <h2 className=\"text-2xl font-semibold text-gray-800\">Team & Resources</h2>\n              <div className=\"ml-2 px-3 py-1 bg-blue-100 text-blue-800 text-xs font-medium rounded-full\">\n                1 Active Member\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"lg:col-span-2\">\n                <div className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden\">\n                  <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-100 flex justify-between items-center\">\n                    <h3 className=\"text-lg font-semibold text-gray-800\">Team Members</h3>\n                    <button className=\"text-sm px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\">\n                      Invite\n                    </button>\n                  </div>\n                  <div className=\"p-6\">\n                    <OrganizationMembersCard maxDisplayed={5} />\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden\">\n                  <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-100\">\n                    <h3 className=\"text-lg font-semibold text-gray-800\">Quick Stats</h3>\n                  </div>\n                  \n                  <div className=\"p-6\">\n                    <div className=\"space-y-6\">\n                      <div>\n                        <p className=\"text-sm text-gray-500\">Total Products</p>\n                        <div className=\"flex items-end mt-2\">\n                          <p className=\"text-2xl font-bold text-gray-800\">0</p>\n                          <span className=\"ml-2 text-xs px-2 py-1 bg-gray-100 text-gray-600 rounded\">\n                            New\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <p className=\"text-sm text-gray-500\">Storage Used</p>\n                        <div className=\"flex items-center mt-2\">\n                          <p className=\"text-2xl font-bold text-gray-800\">0 MB</p>\n                          <span className=\"text-xs text-gray-500 ml-2\">of 1GB</span>\n                        </div>\n                        <div className=\"w-full h-2 bg-gray-100 rounded-full mt-2\">\n                          <div className=\"w-0 h-2 bg-blue-600 rounded-full\"></div>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <p className=\"text-sm text-gray-500\">Active Users</p>\n                        <div className=\"flex items-center mt-2\">\n                          <p className=\"text-2xl font-bold text-gray-800\">1</p>\n                          <span className=\"ml-2 text-xs px-2 py-1 bg-green-100 text-green-600 rounded\">\n                            Online\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mb-10\">\n            <div className=\"flex items-center justify-between mb-5\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">Video Content</h2>\n              <Link \n                href=\"/my-videos\"\n                className=\"flex items-center text-indigo-600 hover:text-indigo-800 font-medium\"\n              >\n                View All\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              </Link>\n            </div>\n            \n            {loading ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {[...Array(6)].map((_, i) => (\n                  <div key={i} className=\"aspect-video bg-gray-100 rounded-lg animate-pulse\"></div>\n                ))}\n              </div>\n            ) : error ? (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 text-red-600\">\n                {error}\n                <button onClick={fetchVideos} className=\"ml-3 underline\">Retry</button>\n              </div>\n            ) : videos.length === 0 ? (\n              <div className=\"bg-white rounded-lg border border-gray-200 p-8 text-center\">\n                <div className=\"text-6xl mb-4\">🎬</div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No videos yet</h3>\n                <p className=\"text-gray-600 mb-4\">Start uploading your videos to share with your audience</p>\n                <Link\n                  href=\"/upload-video\"\n                  className=\"inline-block bg-indigo-600 hover:bg-indigo-700 text-white font-medium px-6 py-2 rounded-lg transition-colors\"\n                >\n                  Upload Your First Video\n                </Link>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {videos.map(video => (\n                  <VideoCard key={video.uid} video={video} />\n                ))}\n              </div>\n            )}\n          </div>\n          \n          {(error || (typeof window !== 'undefined' && window.location.search.includes('debug=true'))) && (\n            <div className=\"mt-10 border-t pt-6\">\n              <div className=\"flex items-center mb-4 justify-between\">\n                <h2 className=\"text-xl font-semibold text-gray-800\">Debug Information</h2>\n                <div className=\"inline-flex items-center px-2.5 py-1 rounded-md text-xs font-medium bg-gray-100 text-gray-800\">\n                  Development Mode\n                </div>\n              </div>\n              \n              {error && (\n                <div className=\"mb-6 bg-red-50 border border-red-200 rounded-md p-4\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm font-medium text-red-800\">{error}</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"bg-gray-800 p-4 rounded-lg overflow-auto text-xs mb-4\">\n                <pre className=\"text-gray-300\">\n                  {JSON.stringify(debugInfo, null, 2)}\n                </pre>\n              </div>\n              \n              {apiTestResult && (\n                <div className=\"mt-4\">\n                  <h3 className=\"font-semibold mb-2 text-gray-700\">API Test Result</h3>\n                  <div className=\"bg-gray-800 p-4 rounded-lg overflow-auto text-xs\">\n                    <pre className=\"text-gray-300\">\n                      {JSON.stringify(apiTestResult, null, 2)}\n                    </pre>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"mt-4 flex flex-wrap gap-2\">\n                <button \n                  onClick={handleRetry} \n                  className=\"px-3 py-2 bg-blue-600 text-white rounded-md text-sm hover:bg-blue-700 transition-colors flex items-center space-x-1\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <svg className=\"animate-spin h-4 w-4 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                  ) : (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                  )}\n                  <span>Retry Subscription Load</span>\n                </button>\n                \n                <button \n                  onClick={testCreateOrganization} \n                  className=\"px-3 py-2 bg-green-600 text-white rounded-md text-sm hover:bg-green-700 transition-colors flex items-center\"\n                  disabled={apiTestLoading}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                  </svg>\n                  Test Create Organization\n                </button>\n                \n                <button \n                  onClick={testDirectApiCall} \n                  className=\"px-3 py-2 bg-purple-600 text-white rounded-md text-sm hover:bg-purple-700 transition-colors flex items-center\"\n                  disabled={apiTestLoading}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\n                  </svg>\n                  Test Direct API Call\n                </button>\n                \n                <button \n                  onClick={testTokenVerification} \n                  className=\"px-3 py-2 bg-orange-600 text-white rounded-md text-sm hover:bg-orange-700 transition-colors flex items-center\"\n                  disabled={apiTestLoading}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                  </svg>\n                  Test Token Verification\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n\n      {/* Render the embed modal when a video is selected */}\n      {selectedVideo && (\n        <EmbedModal\n          isOpen={isEmbedModalOpen}\n          onClose={() => setIsEmbedModalOpen(false)}\n          video={selectedVideo}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DashboardPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}