{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useClerk, useUser } from '@clerk/nextjs';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: any;\n  loading: boolean;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const { signOut } = useClerk();\n  const { user, isLoaded: isUserLoaded } = useUser();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (isUserLoaded) {\n      setLoading(false);\n    }\n  }, [isUserLoaded]);\n\n  const logout = async () => {\n    await signOut();\n    router.push('/sign-in');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        loading,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const useAuthService = () => {\n  const { session, user } = useClerk();\n\n  const getToken = async (): Promise<string | null> => {\n    try {\n      if (!session) return null;\n      return await session.getToken();\n    } catch (error) {\n      console.error('Error getting token:', error);\n      return null;\n    }\n  };\n\n  const isAuthenticated = (): boolean => {\n    return !!user;\n  };\n\n  const getUserDetails = () => {\n    if (!user) return null;\n    \n    return {\n      id: user.id,\n      fullName: `${user.firstName} ${user.lastName}`,\n      email: user.primaryEmailAddress?.emailAddress,\n      imageUrl: user.imageUrl\n    };\n  };\n\n  return {\n    getToken,\n    isAuthenticated,\n    getUserDetails\n  };\n};"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,UAAU,YAAY,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IAC/C,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,WAAW;QACb;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,SAAS;QACb,MAAM;QACN,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,qKAAC,YAAY,QAAQ;QACnB,OAAO;YACL,iBAAiB,CAAC,CAAC;YACnB;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEO,MAAM,iBAAiB;IAC5B,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,WAAW;QACf,IAAI;YACF,IAAI,CAAC,SAAS,OAAO;YACrB,OAAO,MAAM,QAAQ,QAAQ;QAC/B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO;QACT;IACF;IAEA,MAAM,kBAAkB;QACtB,OAAO,CAAC,CAAC;IACX;IAEA,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM,OAAO;QAElB,OAAO;YACL,IAAI,KAAK,EAAE;YACX,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;YAC9C,OAAO,KAAK,mBAAmB,EAAE;YACjC,UAAU,KAAK,QAAQ;QACzB;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/hooks/useClerkToken.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useClerk, useUser, useOrganization } from '@clerk/nextjs';\n\n/**\n * This hook ensures the Clerk token is stored in localStorage\n * so the API service can use it for authenticated requests\n */\nexport function useClerkToken() {\n  const { session } = useClerk();\n  const { user, isLoaded: userLoaded } = useUser();\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const [lastOrgId, setLastOrgId] = useState<string | null>(null);\n  \n  // This effect handles token storage when organization changes\n  useEffect(() => {\n    // Wait until both user and organization data are loaded\n    if (!userLoaded || !orgLoaded) return;\n    \n    // Skip if organization hasn't changed\n    if (organization?.id === lastOrgId) return;\n    \n    // Update last org id\n    setLastOrgId(organization?.id || null);\n    \n    const storeToken = async () => {\n      if (!session) {\n        console.warn('No active session found');\n        localStorage.removeItem('token');\n        return;\n      }\n      \n      try {\n        console.log('Getting token from Clerk session...');\n        console.log('Current organization:', organization?.id, organization?.name);\n        \n        // Get organization-aware token - ensure our JWT template includes org claims\n        const tokenOptions = organization?.id \n          ? { \n              template: 'token_videos_on_demand_2',  // Use a template with organization claims\n              // You can also provide session data if needed\n              session: {\n                resources: [\"organization\"],\n                organizationId: organization.id,\n              }\n            } \n          : {};\n        \n        const token = await session.getToken(tokenOptions);\n        \n        if (token) {\n          // Store token with organization info\n          localStorage.setItem('token', token);\n          \n          // Store current organization ID separately for reference\n          if (organization?.id) {\n            localStorage.setItem('currentOrganizationId', organization.id);\n          } else {\n            localStorage.removeItem('currentOrganizationId');\n          }\n          \n          console.log('Token stored successfully with organization context');\n          \n          // Log user membership info for debugging\n          if (user) {\n            console.log('User organizations:', user.organizationMemberships?.length || 0);\n            user.organizationMemberships?.forEach(membership => {\n              const isActive = membership.organization.id === organization?.id;\n              console.log(`- Org: ${membership.organization.name} (${membership.organization.id}), Role: ${membership.role}${isActive ? ' [ACTIVE]' : ''}`);\n            });\n          }\n        } else {\n          console.warn('Empty token received from Clerk');\n        }\n      } catch (error) {\n        console.error('Failed to get or store Clerk token:', error);\n      }\n    };\n    \n    // Store token initially\n    storeToken();\n  }, [session, user, userLoaded, organization, orgLoaded, lastOrgId]);\n  \n  // This effect sets up token refresh on an interval\n  useEffect(() => {\n    // Setup polling interval to refresh token\n    const intervalId = setInterval(() => {\n      // Only refresh if we have a session and user is loaded\n      if (session && userLoaded) {\n        // This will trigger the above effect if organization has changed\n        setLastOrgId(organization?.id || null);\n      }\n    }, 1000 * 60 * 5); // Check every 5 minutes\n    \n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [session, userLoaded, organization]);\n}\n\nexport default useClerkToken; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;AASO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,WAAQ,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,UAAU,UAAU,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,EAAE,YAAY,EAAE,UAAU,SAAS,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,kBAAe,AAAD;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,8DAA8D;IAC9D,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wDAAwD;QACxD,IAAI,CAAC,cAAc,CAAC,WAAW;QAE/B,sCAAsC;QACtC,IAAI,cAAc,OAAO,WAAW;QAEpC,qBAAqB;QACrB,aAAa,cAAc,MAAM;QAEjC,MAAM,aAAa;YACjB,IAAI,CAAC,SAAS;gBACZ,QAAQ,IAAI,CAAC;gBACb,aAAa,UAAU,CAAC;gBACxB;YACF;YAEA,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,QAAQ,GAAG,CAAC,yBAAyB,cAAc,IAAI,cAAc;gBAErE,6EAA6E;gBAC7E,MAAM,eAAe,cAAc,KAC/B;oBACE,UAAU;oBACV,8CAA8C;oBAC9C,SAAS;wBACP,WAAW;4BAAC;yBAAe;wBAC3B,gBAAgB,aAAa,EAAE;oBACjC;gBACF,IACA,CAAC;gBAEL,MAAM,QAAQ,MAAM,QAAQ,QAAQ,CAAC;gBAErC,IAAI,OAAO;oBACT,qCAAqC;oBACrC,aAAa,OAAO,CAAC,SAAS;oBAE9B,yDAAyD;oBACzD,IAAI,cAAc,IAAI;wBACpB,aAAa,OAAO,CAAC,yBAAyB,aAAa,EAAE;oBAC/D,OAAO;wBACL,aAAa,UAAU,CAAC;oBAC1B;oBAEA,QAAQ,GAAG,CAAC;oBAEZ,yCAAyC;oBACzC,IAAI,MAAM;wBACR,QAAQ,GAAG,CAAC,uBAAuB,KAAK,uBAAuB,EAAE,UAAU;wBAC3E,KAAK,uBAAuB,EAAE,QAAQ,CAAA;4BACpC,MAAM,WAAW,WAAW,YAAY,CAAC,EAAE,KAAK,cAAc;4BAC9D,QAAQ,GAAG,CAAC,CAAC,OAAO,EAAE,WAAW,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,WAAW,IAAI,GAAG,WAAW,cAAc,IAAI;wBAC9I;oBACF;gBACF,OAAO;oBACL,QAAQ,IAAI,CAAC;gBACf;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uCAAuC;YACvD;QACF;QAEA,wBAAwB;QACxB;IACF,GAAG;QAAC;QAAS;QAAM;QAAY;QAAc;QAAW;KAAU;IAElE,mDAAmD;IACnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,0CAA0C;QAC1C,MAAM,aAAa,YAAY;YAC7B,uDAAuD;YACvD,IAAI,WAAW,YAAY;gBACzB,iEAAiE;gBACjE,aAAa,cAAc,MAAM;YACnC;QACF,GAAG,OAAO,KAAK,IAAI,wBAAwB;QAE3C,OAAO;YACL,cAAc;QAChB;IACF,GAAG;QAAC;QAAS;QAAY;KAAa;AACxC;uCAEe"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/TokenProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport useClerkToken from '../hooks/useClerkToken';\n\ninterface TokenProviderProps {\n  children: ReactNode;\n}\n\nexport function TokenProvider({ children }: TokenProviderProps) {\n  // This hook handles storing the Clerk token in localStorage\n  useClerkToken();\n  \n  // Just render children - the hook does the work\n  return <>{children}</>;\n}\n\nexport default TokenProvider; "],"names":[],"mappings":";;;;;AAGA;AAHA;;;AASO,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,4DAA4D;IAC5D,CAAA,GAAA,sHAAA,CAAA,UAAa,AAAD;IAEZ,gDAAgD;IAChD,qBAAO;kBAAG;;AACZ;uCAEe"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport { ClerkProvider } from \"@clerk/nextjs\";\nimport type { AppProps } from \"next/app\";\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport TokenProvider from \"../components/TokenProvider\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <ClerkProvider {...pageProps}>\n      <TokenProvider>\n        <AuthProvider>\n          <Component {...pageProps} />\n        </AuthProvider>\n      </TokenProvider>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAHA;;;;;;AAKe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,kKAAA,CAAA,gBAAa;QAAE,GAAG,SAAS;kBAC1B,cAAA,qKAAC,4HAAA,CAAA,UAAa;sBACZ,cAAA,qKAAC,wHAAA,CAAA,eAAY;0BACX,cAAA,qKAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;AAKlC"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api-connection/service.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000', // Make sure this matches your backend port\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    withCredentials: true\n});\n\n// Add request interceptor to include Clerk token from localStorage\napi.interceptors.request.use(\n    async (config) => {\n        if (typeof window === 'undefined') return config;\n        \n        // Get token from local storage\n        const token = localStorage.getItem('token');\n        const currentOrgId = localStorage.getItem('currentOrganizationId');\n        \n        // Log request details for debugging\n        console.log(`API ${config.method?.toUpperCase()} request to: ${config.url}`);\n        \n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n            \n            // Add organization context header if available\n            if (currentOrgId) {\n                config.headers['X-Organization-Id'] = currentOrgId;\n                console.log('Including organization context:', currentOrgId);\n            } else {\n                console.warn('No organization context available for this request');\n            }\n            \n            // Log token for debugging (truncated for security)\n            if (token.length > 20) {\n                console.log('Using token:', token.substring(0, 15) + '...');\n            }\n        } else {\n            console.warn('No authentication token found');\n        }\n        \n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        console.error('API error:', error?.response?.data || error.message);\n        \n        // Get organization context for better error handling\n        const currentOrgId = typeof window !== 'undefined' ? \n            localStorage.getItem('currentOrganizationId') : null;\n        \n        // Handle specific error conditions\n        if (error.response?.status === 401) {\n            // Unauthorized - token is invalid or missing\n            console.error('Authentication error: Your session may have expired');\n            if (typeof window !== 'undefined') {\n                window.dispatchEvent(new CustomEvent('auth:unauthorized'));\n            }\n        } else if (error.response?.status === 400 && \n                  error.response?.data?.message?.includes('organization')) {\n            // Organization access issue\n            console.error('Organization access error:', error.response.data.message);\n            \n            // Log additional details for debugging\n            if (typeof window !== 'undefined') {\n                console.log('Current organization ID:', currentOrgId);\n                console.log('Requested URL:', error.config?.url);\n                console.log('Request details:', {\n                    method: error.config?.method,\n                    params: error.config?.params,\n                    data: error.config?.data\n                });\n            }\n        }\n        \n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,MAAM,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,SAAS,6DAAmC;IAC5C,SAAS;QACL,gBAAgB;IACpB;IACA,iBAAiB;AACrB;AAEA,mEAAmE;AACnE,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CACxB,OAAO;IACH,wCAAmC,OAAO;;IAE1C,+BAA+B;IAC/B,MAAM;IACN,MAAM;AAyBV,GACA,CAAC;IACG,OAAO,QAAQ,MAAM,CAAC;AAC1B;AAGJ,8CAA8C;AAC9C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC,WAAa,UACd,CAAC;IACG,QAAQ,KAAK,CAAC,cAAc,OAAO,UAAU,QAAQ,MAAM,OAAO;IAElE,qDAAqD;IACrD,MAAM,eAAe,6EAC+B;IAEpD,mCAAmC;IACnC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAChC,6CAA6C;QAC7C,QAAQ,KAAK,CAAC;QACd,uCAAmC;;QAEnC;IACJ,OAAO,IAAI,MAAM,QAAQ,EAAE,WAAW,OAC5B,MAAM,QAAQ,EAAE,MAAM,SAAS,SAAS,iBAAiB;QAC/D,4BAA4B;QAC5B,QAAQ,KAAK,CAAC,8BAA8B,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;QAEvE,uCAAuC;QACvC,uCAAmC;;QAQnC;IACJ;IAEA,OAAO,QAAQ,MAAM,CAAC;AAC1B;uCAGW"}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/components/OrganizationDebugger.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useUser, useOrganization } from '@clerk/nextjs';\nimport api from '../api-connection/service';\n\nexport default function OrganizationDebugger() {\n  const { user, isLoaded: userLoaded } = useUser();\n  const { organization, isLoaded: orgLoaded } = useOrganization();\n  const [authInfo, setAuthInfo] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const checkAuth = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await api.get('/api/auth/debug');\n      setAuthInfo(response.data);\n    } catch (err: any) {\n      setError(err?.response?.data?.message || err.message || 'Failed to get auth info');\n      console.error('Auth debug error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Get token info when organization changes\n  useEffect(() => {\n    if (userLoaded && orgLoaded) {\n      checkAuth();\n    }\n  }, [userLoaded, orgLoaded, organization?.id]);\n  \n  return (\n    <div className=\"p-4 border rounded-lg bg-white shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">Organization Debug Panel</h2>\n      \n      {/* User information */}\n      <div className=\"mb-4\">\n        <h3 className=\"font-medium\">User Info:</h3>\n        {userLoaded ? (\n          <div className=\"text-sm\">\n            <p>ID: {user?.id}</p>\n            <p>Email: {user?.primaryEmailAddress?.emailAddress}</p>\n          </div>\n        ) : (\n          <p className=\"text-sm text-gray-500\">Loading user...</p>\n        )}\n      </div>\n      \n      {/* Organization information */}\n      <div className=\"mb-4\">\n        <h3 className=\"font-medium\">Current Organization:</h3>\n        {orgLoaded ? (\n          organization ? (\n            <div className=\"text-sm\">\n              <p>ID: {organization.id}</p>\n              <p>Name: {organization.name}</p>\n            </div>\n          ) : (\n            <p className=\"text-sm text-gray-500\">No organization selected</p>\n          )\n        ) : (\n          <p className=\"text-sm text-gray-500\">Loading organization...</p>\n        )}\n      </div>\n      \n      {/* Organization memberships */}\n      {userLoaded && user?.organizationMemberships && (\n        <div className=\"mb-4\">\n          <h3 className=\"font-medium\">Organization Memberships:</h3>\n          <ul className=\"text-sm\">\n            {user.organizationMemberships.map(membership => (\n              <li key={membership.organization.id} className={`mb-1 ${\n                membership.organization.id === organization?.id ? 'font-bold' : ''\n              }`}>\n                {membership.organization.name} ({membership.role})\n                {membership.organization.id === organization?.id && \n                  <span className=\"ml-2 text-green-600\">[ACTIVE]</span>\n                }\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      \n      {/* Auth debug information */}\n      <div className=\"mb-4\">\n        <h3 className=\"font-medium\">Auth Debug Info:</h3>\n        <button \n          onClick={checkAuth} \n          className=\"text-xs bg-blue-500 text-white py-1 px-2 rounded hover:bg-blue-600 mb-2\"\n          disabled={loading}\n        >\n          {loading ? 'Loading...' : 'Refresh'}\n        </button>\n        \n        {error && (\n          <div className=\"text-red-500 text-sm mb-2\">{error}</div>\n        )}\n        \n        {authInfo && (\n          <div className=\"text-xs overflow-auto max-h-40 bg-gray-100 p-2 rounded\">\n            <pre>{JSON.stringify(authInfo, null, 2)}</pre>\n          </div>\n        )}\n      </div>\n      \n      {/* Local storage info */}\n      <div>\n        <h3 className=\"font-medium\">Local Storage:</h3>\n        <div className=\"text-xs mt-1\">\n          <p>token: {typeof window !== 'undefined' && localStorage.getItem('token') ? '✅ Present' : '❌ Missing'}</p>\n          <p>currentOrganizationId: {typeof window !== 'undefined' && localStorage.getItem('currentOrganizationId')}</p>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/pages/debug.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { SignedIn, SignedOut, RedirectToSignIn } from '@clerk/nextjs';\nimport OrganizationDebugger from '../components/OrganizationDebugger';\nimport useClerkToken from '../hooks/useClerkToken';\n\nexport default function DebugPage() {\n  // This ensures the Clerk token is stored and refreshed\n  useClerkToken();\n  \n  const router = useRouter();\n  \n  // Create or select organization if needed\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    \n    // Check local storage for token\n    const hasToken = !!localStorage.getItem('token');\n    console.log('Token in local storage:', hasToken);\n  }, []);\n  \n  return (\n    <>\n      <SignedIn>\n        <div className=\"p-8 max-w-4xl mx-auto\">\n          <h1 className=\"text-3xl font-bold mb-6\">Authentication Debug Page</h1>\n          \n          <div className=\"mb-6\">\n            <button \n              onClick={() => router.push('/organization-selector')}\n              className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 mr-4\"\n            >\n              Change Organization\n            </button>\n            \n            <button \n              onClick={() => router.push('/')}\n              className=\"bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300\"\n            >\n              Back to Home\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 gap-6\">\n            <OrganizationDebugger />\n            \n            {/* API Test Panel */}\n            <div className=\"p-4 border rounded-lg bg-white shadow\">\n              <h2 className=\"text-xl font-bold mb-4\">API Test Panel</h2>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"font-medium mb-2\">Test Authorization</h3>\n                  <button \n                    onClick={async () => {\n                      try {\n                        const res = await fetch('/api/auth/me', {\n                          headers: {\n                            'Authorization': `Bearer ${localStorage.getItem('token')}`\n                          }\n                        });\n                        const data = await res.json();\n                        console.log('Auth test result:', data);\n                        alert(JSON.stringify(data, null, 2));\n                      } catch (err) {\n                        console.error('Auth test error:', err);\n                        alert('Error: ' + (err instanceof Error ? err.message : String(err)));\n                      }\n                    }}\n                    className=\"bg-green-500 text-white px-3 py-1 text-sm rounded hover:bg-green-600\"\n                  >\n                    Test Auth\n                  </button>\n                </div>\n                \n                <div>\n                  <h3 className=\"font-medium mb-2\">Test Subscription</h3>\n                  <button \n                    onClick={async () => {\n                      try {\n                        // Get current org ID from local storage\n                        const orgId = localStorage.getItem('currentOrganizationId');\n                        if (!orgId) {\n                          alert('No organization selected');\n                          return;\n                        }\n                        \n                        const res = await fetch(`/api/subscriptions/${orgId}`, {\n                          headers: {\n                            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n                            'X-Organization-Id': orgId\n                          }\n                        });\n                        const data = await res.json();\n                        console.log('Subscription test result:', data);\n                        alert(JSON.stringify(data, null, 2));\n                      } catch (err) {\n                        console.error('Subscription test error:', err);\n                        alert('Error: ' + (err instanceof Error ? err.message : String(err)));\n                      }\n                    }}\n                    className=\"bg-green-500 text-white px-3 py-1 text-sm rounded hover:bg-green-600\"\n                  >\n                    Test Subscription\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </SignedIn>\n      <SignedOut>\n        <RedirectToSignIn />\n      </SignedOut>\n    </>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AAFA;AAAA;;;;;;;;;;;AAIe,SAAS;IACtB,uDAAuD;IACvD,CAAA,GAAA,sHAAA,CAAA,UAAa,AAAD;IAEZ,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,0CAA0C;IAC1C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;QAEnC,gCAAgC;QAChC,MAAM;IAER,GAAG,EAAE;IAEL,qBACE;;0BACE,qKAAC,kKAAA,CAAA,WAAQ;0BACP,cAAA,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAG,WAAU;sCAA0B;;;;;;sCAExC,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCACC,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,WAAU;8CACX;;;;;;8CAID,qKAAC;oCACC,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,WAAU;8CACX;;;;;;;;;;;;sCAKH,qKAAC;4BAAI,WAAU;;8CACb,qKAAC,mIAAA,CAAA,UAAoB;;;;;8CAGrB,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAAyB;;;;;;sDAEvC,qKAAC;4CAAI,WAAU;;8DACb,qKAAC;;sEACC,qKAAC;4DAAG,WAAU;sEAAmB;;;;;;sEACjC,qKAAC;4DACC,SAAS;gEACP,IAAI;oEACF,MAAM,MAAM,MAAM,MAAM,gBAAgB;wEACtC,SAAS;4EACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,UAAU;wEAC5D;oEACF;oEACA,MAAM,OAAO,MAAM,IAAI,IAAI;oEAC3B,QAAQ,GAAG,CAAC,qBAAqB;oEACjC,MAAM,KAAK,SAAS,CAAC,MAAM,MAAM;gEACnC,EAAE,OAAO,KAAK;oEACZ,QAAQ,KAAK,CAAC,oBAAoB;oEAClC,MAAM,YAAY,CAAC,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO,IAAI;gEACrE;4DACF;4DACA,WAAU;sEACX;;;;;;;;;;;;8DAKH,qKAAC;;sEACC,qKAAC;4DAAG,WAAU;sEAAmB;;;;;;sEACjC,qKAAC;4DACC,SAAS;gEACP,IAAI;oEACF,wCAAwC;oEACxC,MAAM,QAAQ,aAAa,OAAO,CAAC;oEACnC,IAAI,CAAC,OAAO;wEACV,MAAM;wEACN;oEACF;oEAEA,MAAM,MAAM,MAAM,MAAM,CAAC,mBAAmB,EAAE,OAAO,EAAE;wEACrD,SAAS;4EACP,iBAAiB,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,UAAU;4EAC1D,qBAAqB;wEACvB;oEACF;oEACA,MAAM,OAAO,MAAM,IAAI,IAAI;oEAC3B,QAAQ,GAAG,CAAC,6BAA6B;oEACzC,MAAM,KAAK,SAAS,CAAC,MAAM,MAAM;gEACnC,EAAE,OAAO,KAAK;oEACZ,QAAQ,KAAK,CAAC,4BAA4B;oEAC1C,MAAM,YAAY,CAAC,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO,IAAI;gEACrE;4DACF;4DACA,WAAU;sEACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASb,qKAAC,kKAAA,CAAA,YAAS;0BACR,cAAA,qKAAC,gLAAA,CAAA,mBAAgB;;;;;;;;;;;;AAIzB"}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}