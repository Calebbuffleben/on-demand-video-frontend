{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api-connection/service.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    withCredentials: true\n});\n\n// Add request interceptor to include Clerk token from localStorage\napi.interceptors.request.use(\n    async (config) => {\n        if (typeof window === 'undefined') {\n            // We're on the server, so don't attempt to use localStorage\n            console.log('API request on server side - skipping auth token');\n            return config;\n        }\n        \n        // Get token from local storage\n        const token = localStorage.getItem('token');\n        const clerkOrgId = localStorage.getItem('currentOrganizationId');\n        const dbOrgId = localStorage.getItem('dbOrganizationId');\n        \n        // Log request details for debugging\n        console.log(`API ${config.method?.toUpperCase()} request to: ${config.url}`);\n        \n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n            \n            // Add organization context headers if available\n            if (clerkOrgId) {\n                // Always use Clerk ID for auth context\n                config.headers['X-Organization-Id'] = clerkOrgId;\n                console.log('Including Clerk organization ID:', clerkOrgId);\n            }\n            \n            // For endpoints that need database ID format\n            if (dbOrgId) {\n                config.headers['X-DB-Organization-Id'] = dbOrgId;\n                console.log('Including database organization ID:', dbOrgId);\n            }\n            \n            // For subscriptions endpoints, prioritize using database ID in URL\n            if (config.url && config.url.includes('/api/subscriptions/')) {\n                // If URL ends with 'current' or ID is already embedded, don't modify\n                if (!config.url.endsWith('/current') && \n                    !config.url.match(/\\/api\\/subscriptions\\/[a-zA-Z0-9_-]+$/)) {\n                    \n                    // Use database ID if available, otherwise use Clerk ID\n                    const orgIdForUrl = dbOrgId || clerkOrgId;\n                    if (orgIdForUrl) {\n                        config.url = `/api/subscriptions/${orgIdForUrl}`;\n                        console.log('Using organization ID in URL:', orgIdForUrl);\n                    }\n                }\n            }\n            \n            // Log token for debugging (truncated for security)\n            if (token.length > 20) {\n                console.log('Using token:', token.substring(0, 15) + '...');\n            }\n        } else {\n            console.warn('No authentication token found');\n        }\n        \n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n    (response) => {\n        console.log(`API response from ${response.config.url}: Status ${response.status}`);\n        \n        // Only attempt to use localStorage on the client\n        if (typeof window !== 'undefined') {\n            // Check for organization ID in response and save it\n            if (response.data?.organization?.id) {\n                // If the ID format suggests a database ID (UUID), save it\n                if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(response.data.organization.id)) {\n                    console.log('Saving database organization ID from response:', response.data.organization.id);\n                    localStorage.setItem('dbOrganizationId', response.data.organization.id);\n                }\n                \n                // If there's a clerkId field, save that too\n                if (response.data.organization.clerkId) {\n                    console.log('Saving Clerk organization ID from response:', response.data.organization.clerkId);\n                    localStorage.setItem('currentOrganizationId', response.data.organization.clerkId);\n                }\n            }\n        }\n        \n        return response;\n    },\n    (error) => {\n        console.error('API error:', error?.response?.data || error.message);\n        \n        // Only attempt to use localStorage and event dispatching on the client\n        if (typeof window !== 'undefined') {\n            // Get organization context for better error handling\n            const clerkOrgId = localStorage.getItem('currentOrganizationId');\n            const dbOrgId = localStorage.getItem('dbOrganizationId');\n            \n            // Handle specific error conditions\n            if (error.response?.status === 401) {\n                // Unauthorized - token is invalid or missing\n                console.error('Authentication error: Your session may have expired');\n                window.dispatchEvent(new CustomEvent('auth:unauthorized'));\n            } else if (error.response?.status === 400) {\n                // Organization access issue\n                console.error('Request error:', error.response.data.message);\n                \n                // Log detailed request info for debugging\n                console.error('Request URL:', error.config?.url);\n                console.error('Request headers:', JSON.stringify({\n                    'Authorization': error.config?.headers?.Authorization ? 'Bearer [REDACTED]' : 'None',\n                    'X-Organization-Id': error.config?.headers?.['X-Organization-Id'] || 'None',\n                    'X-DB-Organization-Id': error.config?.headers?.['X-DB-Organization-Id'] || 'None'\n                }));\n                console.log('Request details:', {\n                    method: error.config?.method,\n                    params: error.config?.params,\n                    data: error.config?.data\n                });\n                \n                console.log('Organization IDs:', {\n                    clerkId: clerkOrgId,\n                    dbId: dbOrgId\n                });\n                \n                // If error is organization related, check auth state\n                if (error.response?.data?.message?.includes('organization')) {\n                    window.dispatchEvent(new CustomEvent('org:accessdenied', {\n                        detail: { message: error.response.data.message }\n                    }));\n                }\n            }\n        }\n        \n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"names":[],"mappings":";;;AAAA;AAGa;;AADb,MAAM,MAAM,iIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,SAAS,6DAAmC;IAC5C,SAAS;QACL,gBAAgB;IACpB;IACA,iBAAiB;AACrB;AAEA,mEAAmE;AACnE,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CACxB,OAAO;IACH,uCAAmC;;IAInC;IAEA,+BAA+B;IAC/B,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,MAAM,aAAa,aAAa,OAAO,CAAC;IACxC,MAAM,UAAU,aAAa,OAAO,CAAC;IAErC,oCAAoC;IACpC,QAAQ,GAAG,CAAC,CAAC,IAAI,EAAE,OAAO,MAAM,EAAE,cAAc,aAAa,EAAE,OAAO,GAAG,EAAE;IAE3E,IAAI,OAAO;QACP,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;QAEnD,gDAAgD;QAChD,IAAI,YAAY;YACZ,uCAAuC;YACvC,OAAO,OAAO,CAAC,oBAAoB,GAAG;YACtC,QAAQ,GAAG,CAAC,oCAAoC;QACpD;QAEA,6CAA6C;QAC7C,IAAI,SAAS;YACT,OAAO,OAAO,CAAC,uBAAuB,GAAG;YACzC,QAAQ,GAAG,CAAC,uCAAuC;QACvD;QAEA,mEAAmE;QACnE,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC,wBAAwB;YAC1D,qEAAqE;YACrE,IAAI,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,eACrB,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,0CAA0C;gBAE5D,uDAAuD;gBACvD,MAAM,cAAc,WAAW;gBAC/B,IAAI,aAAa;oBACb,OAAO,GAAG,GAAG,CAAC,mBAAmB,EAAE,aAAa;oBAChD,QAAQ,GAAG,CAAC,iCAAiC;gBACjD;YACJ;QACJ;QAEA,mDAAmD;QACnD,IAAI,MAAM,MAAM,GAAG,IAAI;YACnB,QAAQ,GAAG,CAAC,gBAAgB,MAAM,SAAS,CAAC,GAAG,MAAM;QACzD;IACJ,OAAO;QACH,QAAQ,IAAI,CAAC;IACjB;IAEA,OAAO;AACX,GACA,CAAC;IACG,OAAO,QAAQ,MAAM,CAAC;AAC1B;AAGJ,8CAA8C;AAC9C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC;IACG,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,SAAS,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,MAAM,EAAE;IAEjF,iDAAiD;IACjD,wCAAmC;QAC/B,oDAAoD;QACpD,IAAI,SAAS,IAAI,EAAE,cAAc,IAAI;YACjC,0DAA0D;YAC1D,IAAI,kEAAkE,IAAI,CAAC,SAAS,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG;gBACvG,QAAQ,GAAG,CAAC,kDAAkD,SAAS,IAAI,CAAC,YAAY,CAAC,EAAE;gBAC3F,aAAa,OAAO,CAAC,oBAAoB,SAAS,IAAI,CAAC,YAAY,CAAC,EAAE;YAC1E;YAEA,4CAA4C;YAC5C,IAAI,SAAS,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;gBACpC,QAAQ,GAAG,CAAC,+CAA+C,SAAS,IAAI,CAAC,YAAY,CAAC,OAAO;gBAC7F,aAAa,OAAO,CAAC,yBAAyB,SAAS,IAAI,CAAC,YAAY,CAAC,OAAO;YACpF;QACJ;IACJ;IAEA,OAAO;AACX,GACA,CAAC;IACG,QAAQ,KAAK,CAAC,cAAc,OAAO,UAAU,QAAQ,MAAM,OAAO;IAElE,uEAAuE;IACvE,wCAAmC;QAC/B,qDAAqD;QACrD,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,MAAM,UAAU,aAAa,OAAO,CAAC;QAErC,mCAAmC;QACnC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;YAChC,6CAA6C;YAC7C,QAAQ,KAAK,CAAC;YACd,OAAO,aAAa,CAAC,IAAI,YAAY;QACzC,OAAO,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;YACvC,4BAA4B;YAC5B,QAAQ,KAAK,CAAC,kBAAkB,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;YAE3D,0CAA0C;YAC1C,QAAQ,KAAK,CAAC,gBAAgB,MAAM,MAAM,EAAE;YAC5C,QAAQ,KAAK,CAAC,oBAAoB,KAAK,SAAS,CAAC;gBAC7C,iBAAiB,MAAM,MAAM,EAAE,SAAS,gBAAgB,sBAAsB;gBAC9E,qBAAqB,MAAM,MAAM,EAAE,SAAS,CAAC,oBAAoB,IAAI;gBACrE,wBAAwB,MAAM,MAAM,EAAE,SAAS,CAAC,uBAAuB,IAAI;YAC/E;YACA,QAAQ,GAAG,CAAC,oBAAoB;gBAC5B,QAAQ,MAAM,MAAM,EAAE;gBACtB,QAAQ,MAAM,MAAM,EAAE;gBACtB,MAAM,MAAM,MAAM,EAAE;YACxB;YAEA,QAAQ,GAAG,CAAC,qBAAqB;gBAC7B,SAAS;gBACT,MAAM;YACV;YAEA,qDAAqD;YACrD,IAAI,MAAM,QAAQ,EAAE,MAAM,SAAS,SAAS,iBAAiB;gBACzD,OAAO,aAAa,CAAC,IAAI,YAAY,oBAAoB;oBACrD,QAAQ;wBAAE,SAAS,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;oBAAC;gBACnD;YACJ;QACJ;IACJ;IAEA,OAAO,QAAQ,MAAM,CAAC;AAC1B;uCAGW"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebbuffleben/Desktop/projetos/stream/frontend/src/api-connection/subscriptions.ts"],"sourcesContent":["import api from './service';\n\nexport const subscriptionService = {\n  // Get current user's subscription\n  getCurrentSubscription: async () => {\n    console.log('Fetching current subscription...');\n    \n    try {\n      // First check if we're on server side\n      if (typeof window === 'undefined') {\n        console.log('Server-side rendering detected - returning default subscription');\n        return {\n          status: 'no_subscription',\n          subscription: null,\n          message: 'Server-side rendering'\n        };\n      }\n      \n      // Avoid API calls for now since they're causing errors\n      // Just return a default response\n      return {\n        status: 'no_subscription',\n        subscription: null,\n        message: 'Subscription API not available yet'\n      };\n    } catch (error) {\n      // Catch any unexpected errors\n      console.error('Unexpected error in subscription service:', error);\n      return {\n        status: 'error',\n        subscription: null,\n        message: 'An unexpected error occurred'\n      };\n    }\n  },\n\n  // Create a checkout session\n  createCheckoutSession: async (priceId: string) => {\n    try {\n      const response = await api.post('/subscriptions/create-checkout', { priceId });\n      return response.data;\n    } catch (error: any) {\n      console.error('Failed to create checkout session:', error);\n      \n      // If endpoint doesn't exist, provide helpful message\n      if (error.response?.status === 404) {\n        throw new Error('Checkout endpoint not found. The subscription API may not be fully implemented yet.');\n      }\n      \n      throw error;\n    }\n  },\n\n  // Get organizations for the current user\n  getOrganizations: async () => {\n    try {\n      const response = await api.get('/subscriptions/organizations');\n      return response.data;\n    } catch (error: any) {\n      console.error('Failed to get organizations:', error);\n      \n      // If endpoint doesn't exist, return empty array\n      if (error.response?.status === 404) {\n        console.log('Organizations endpoint not found, returning empty list');\n        return { organizations: [] };\n      }\n      \n      throw error;\n    }\n  },\n\n  // Cancel subscription - implementing as a placeholder for when it's added to the backend\n  cancelSubscription: async (subscriptionId: string) => {\n    try {\n      // This is a placeholder - the endpoint doesn't exist yet\n      const response = await api.put(`/subscriptions/${subscriptionId}/cancel`);\n      return response.data;\n    } catch (error: any) {\n      console.error('Failed to cancel subscription:', error);\n      \n      // If endpoint doesn't exist, provide helpful message\n      if (error.response?.status === 404) {\n        throw new Error('Subscription cancellation is not implemented in the API yet.');\n      }\n      \n      throw error;\n    }\n  }\n};\n\n// Helper function to handle subscription errors\nfunction handleSubscriptionError(error: any) {\n  console.error('Subscription error:', error?.response?.data || error.message);\n  \n  // Provide more specific error messages\n  if (error.response?.status === 401) {\n    throw new Error('Your session has expired. Please sign in again.');\n  } else if (error.response?.status === 403) {\n    throw new Error('You do not have permission to access this subscription.');\n  } else if (error.response?.status === 404) {\n    throw new Error('Subscription not found. You may need to subscribe first.');\n  } else if (error.response?.data?.message) {\n    throw new Error(error.response.data.message);\n  }\n}\n\nexport default subscriptionService;"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,sBAAsB;IACjC,kCAAkC;IAClC,wBAAwB;QACtB,QAAQ,GAAG,CAAC;QAEZ,IAAI;YACF,sCAAsC;YACtC,uCAAmC;;YAOnC;YAEA,uDAAuD;YACvD,iCAAiC;YACjC,OAAO;gBACL,QAAQ;gBACR,cAAc;gBACd,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,8BAA8B;YAC9B,QAAQ,KAAK,CAAC,6CAA6C;YAC3D,OAAO;gBACL,QAAQ;gBACR,cAAc;gBACd,SAAS;YACX;QACF;IACF;IAEA,4BAA4B;IAC5B,uBAAuB,OAAO;QAC5B,IAAI;YACF,MAAM,WAAW,MAAM,+HAAA,CAAA,UAAG,CAAC,IAAI,CAAC,kCAAkC;gBAAE;YAAQ;YAC5E,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,sCAAsC;YAEpD,qDAAqD;YACrD,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;gBAClC,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM;QACR;IACF;IAEA,yCAAyC;IACzC,kBAAkB;QAChB,IAAI;YACF,MAAM,WAAW,MAAM,+HAAA,CAAA,UAAG,CAAC,GAAG,CAAC;YAC/B,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,gCAAgC;YAE9C,gDAAgD;YAChD,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;gBAClC,QAAQ,GAAG,CAAC;gBACZ,OAAO;oBAAE,eAAe,EAAE;gBAAC;YAC7B;YAEA,MAAM;QACR;IACF;IAEA,yFAAyF;IACzF,oBAAoB,OAAO;QACzB,IAAI;YACF,yDAAyD;YACzD,MAAM,WAAW,MAAM,+HAAA,CAAA,UAAG,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,eAAe,OAAO,CAAC;YACxE,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,kCAAkC;YAEhD,qDAAqD;YACrD,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;gBAClC,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM;QACR;IACF;AACF;AAEA,gDAAgD;AAChD,SAAS,wBAAwB,KAAU;IACzC,QAAQ,KAAK,CAAC,uBAAuB,OAAO,UAAU,QAAQ,MAAM,OAAO;IAE3E,uCAAuC;IACvC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAClC,MAAM,IAAI,MAAM;IAClB,OAAO,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QACzC,MAAM,IAAI,MAAM;IAClB,OAAO,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QACzC,MAAM,IAAI,MAAM;IAClB,OAAO,IAAI,MAAM,QAAQ,EAAE,MAAM,SAAS;QACxC,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;IAC7C;AACF;uCAEe"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}